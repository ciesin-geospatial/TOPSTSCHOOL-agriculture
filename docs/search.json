[
  {
    "objectID": "NASA-Acres-Climate-Resilience-Network.html",
    "href": "NASA-Acres-Climate-Resilience-Network.html",
    "title": "NASA Acres and Climate Resilience Network",
    "section": "",
    "text": "A regional view of the past with applications to the present. Python spatial and tabular analysis using multiple variables to look at a single time slice. This code can be a combination of cloud and local based analysis. A purpose for this exercise is to use use public research data for derived conclusions view the impacts climate change has on agriculture a look at what farmers can do and why we need to support them.\nNASA Acres has defined the Essential Agricultural Variables or EAVs. These were designed by NASA Acres to define the capabilities of the top satellite data scientists and practitioners who make up NASA Acres Research, Development, and Extension partners, and the needs of decision-making-collaborators already in our network, to identify an initial set of focus.\n\nCropland and Crop Type Mapping\nCrop and Crop Type Area Estimation\n\nDerived results will be the county level statistics of impacts of harvestable acreage. To achieve this, a basic workflow we can\n\nUse api to call in the CDL dataset to map crop types.\n\nThen\n\nAccess the Sea level rise (elevation dataset) to identify new areas of potential areas that are at risk of future flooding. Clip to county of interest\nCompare the CDL with the SLR mask and with out to identify the NOAA estimated loss of land.\n\nThen using MODIS create a time series for NDVI of the masked crop land, derive insights about trends in NDVI\n\nUse NDVI to create a time series looking backwards in time at areas that have experienced flooding to visualize the moving from productive farms to moderate quality.\n\nThis all together would allow us to make a predictive analysis for Maryland in the future under the projections of sea level rise. Given the current conditions, subtracting the sea level rise inundated areas. Then given the remaining areas, making predictions about the trends of NDVI given the trends in historical areas that are near impacted areas. We cannot say that “sea level rise is driving the decrease” because there are many other factor and decisions that farmers make around how much to plant, how much to harvest, chemicals applied, growing degree days, soil and soil moisture conditions. But this module should provide the ability to make insights about potential causes and impacts.\nThe data story that we have derived is about sea level rise in Maryland and the impact that it has on the production levels with in the state. From this module, we can provide students with the ability to draw from multiple data sources, as well as derive insights using historical and future viewing data sets.\nThe U.S. Mid-Atlantic has seen higher rates of sea level rise, marshes may be especially vulnerable. “In the Chesapeake Bay, sea level rise has already contributed to the degradation of over 80,000 ha (70%) of tidal marsh” (Taylor et al. 2020). This view can help us to understand the impacts that small levels of sea level rise have on land.\nWe can prompt the user to think about future impacts outside the direct sea level rise projections, allowing them to include a more full picture, and finally using that picture to identify economic impacts that action or inaction causes. This begs the question, what can the public do to enact changes, rather than putting the pressure on farmers to change?\n\n!pip install arcgis arcgis-mapping rasterio earthaccess\n\nRequirement already satisfied: arcgis in c:\\users\\jmartine\\appdata\\local\\esri\\conda\\envs\\agsdev\\lib\\site-packages (2.2.0)\n\n\n\n\n\n\n#import the required packages\nimport geopandas as gpd\nimport rasterio\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom shapely.geometry import box\nimport numpy as np\nimport requests\nimport xml.etree.ElementTree as ET\nimport matplotlib.pyplot as plt\nfrom io import BytesIO\nimport os\nfrom rasterio.warp import calculate_default_transform, reproject, Resampling\nfrom datetime import datetime, timedelta\n\n\n#define fuctions\n\ndef reproject_raster(src_dataset, src_crs, src_transform, dst_crs='EPSG:4326'):\n    dst_crs = rasterio.crs.CRS.from_string(dst_crs)\n    dst_transform, dst_width, dst_height = calculate_default_transform(\n        src_crs, dst_crs,\n        src_dataset.width, src_dataset.height,\n        *src_dataset.bounds)\n    dst_kwargs = src_dataset.meta.copy()\n    dst_kwargs.update({\n        'crs': dst_crs,\n        'transform': dst_transform,\n        'width': dst_width,\n        'height': dst_height})\n    dst_data = np.zeros((src_dataset.count, dst_height, dst_width), dtype=src_dataset.dtypes[0])\n    for i in range(1, src_dataset.count + 1):\n        reproject(\n            source=rasterio.band(src_dataset, i),\n            destination=dst_data[i-1],\n            src_transform=src_transform,\n            src_crs=src_crs,\n            dst_transform=dst_transform,\n            dst_crs=dst_crs,\n            resampling=Resampling.nearest)\n    return dst_data, dst_kwargs\n\ndef format_cdl_url(fips,year):\n    base_url = \"https://nassgeodata.gmu.edu/axis2/services/CDLService/GetCDLFile\"\n    url = f\"{base_url}?year={year}&fips={fips}\"\n    return url\n\ndef get_srl_raster():\n    slr_path = 'data/MD_East_slr_depth_3_5ft.tif'\n    with rasterio.open(slr_path) as slr_raster:\n            slr_meta = slr_raster.meta\n            slr_meta['nodata'] = 0\n            slr_reprojected, slr_meta_reprojected = reproject_raster(src_dataset=slr_raster, src_crs=slr_meta['crs'], src_transform=slr_meta['transform'])\n    return slr_reprojected, slr_meta_reprojected"
  },
  {
    "objectID": "NASA-Acres-Climate-Resilience-Network.html#combine-and-compare-the-results",
    "href": "NASA-Acres-Climate-Resilience-Network.html#combine-and-compare-the-results",
    "title": "NASA Acres and Climate Resilience Network",
    "section": "Combine and compare the results",
    "text": "Combine and compare the results\n\nndvi_resampled, ndvi_resampled_meta = resample_using_cdl(ndvi, meta, cdl_meta_reprojected)\n\nslr_resampled, slr_resampled_meta = resample_using_cdl(slr_reprojected, slr_meta_reprojected, cdl_meta_reprojected)\n\nprint(\"CDL shape:\", cdl_reprojected.shape)\n\nprint(\"Original NDVI shape:\", ndvi.shape)\n\nprint(\"Resampled NDVI shape:\", ndvi_resampled.shape)\n\nprint(\"Original SLR shape:\", slr_reprojected.shape)\n\nprint(\"Resampled SLR shape:\", slr_resampled.shape)\n\nCDL shape: (1, 1681, 2153)\nOriginal NDVI shape: (9, 166, 402)\nResampled NDVI shape: (9, 1681, 2153)\nOriginal SLR shape: (1, 44790, 28460)\nResampled SLR shape: (1, 1681, 2153)\n\n\n\ndef mask_rasters(cdl_raster, slr_raster, ndvi_rasters):\n\n    corn_mask = cdl_raster == 1\n\n    ABOVE_water_mask = slr_raster <= 1\n\n    corn_above_water_mask = corn_mask & ~ABOVE_water_mask\n\n    corn_below_water_mask = corn_mask & ABOVE_water_mask\n\n    corn_above_water_mask = corn_above_water_mask[0,:,:]\n\n    corn_below_water_mask = corn_below_water_mask[0,:,:]\n\n    masked_ndvi_below_water = ndvi_rasters[:, corn_below_water_mask]\n\n    masked_ndvi_above_water = ndvi_rasters[:, corn_above_water_mask]\n\n    return {\n\n        'corn_below_water': {\n\n            'mask': corn_below_water_mask,\n\n            'ndvi': masked_ndvi_below_water,\n\n            'mean': np.mean(masked_ndvi_below_water, axis=1) if masked_ndvi_below_water.size > 0 else None,\n\n            'min': np.min(masked_ndvi_below_water, axis=1) if masked_ndvi_below_water.size > 0 else None,\n\n            'max': np.max(masked_ndvi_below_water, axis=1) if masked_ndvi_below_water.size > 0 else None\n\n        },\n\n        'corn_above_water': {\n\n            'mask': corn_above_water_mask,\n\n            'ndvi': masked_ndvi_above_water,\n\n            'mean': np.mean(masked_ndvi_above_water, axis=1) if masked_ndvi_above_water.size > 0 else None,\n\n            'min': np.min(masked_ndvi_above_water, axis=1) if masked_ndvi_above_water.size > 0 else None,\n\n            'max': np.max(masked_ndvi_above_water, axis=1) if masked_ndvi_above_water.size > 0 else None\n\n        }\n\n    }\n\n\ndef visualize_ndvi_analysis(ndvi_analysis, days):\n\n    plt.figure(figsize=(12, 6))\n\n    plt.subplot(1, 2, 1)\n\n    plt.plot(days, ndvi_analysis['corn_above_water']['mean'], label='Corn Above Water', color='green')\n\n    plt.plot(days, ndvi_analysis['corn_below_water']['mean'], label='Corn Below Water', color='blue')\n\n    plt.title('Mean NDVI')\n\n    plt.xlabel('Days')\n\n    plt.xticks(rotation=90)\n\n    plt.ylabel('NDVI')\n\n    plt.legend()\n\n    plt.subplot(1, 2, 2)\n\n    plt.plot(days, ndvi_analysis['corn_above_water']['max'], label='Corn Above Water', color='green')\n\n    plt.plot(days, ndvi_analysis['corn_below_water']['max'], label='Corn Below Water', color='blue')\n\n    plt.title('Maximum NDVI')\n\n    plt.xlabel('Days')\n\n    plt.xticks(rotation=90)\n\n    plt.ylabel('NDVI')\n\n    plt.legend()\n\n    plt.tight_layout()\n\n    plt.show()\n\n\nndvi_analysis = mask_rasters(cdl_reprojected, slr_resampled, ndvi_resampled)\n\nvisualize_ndvi_analysis(ndvi_analysis, day)\n\n\n\n\n\nfor condition in ['corn_below_water', 'corn_above_water']:\n\n    print(f\"\\n{condition.replace('_', ' ').title()} Corn Analysis per MODIS:\")\n\n    for stat in ['mean', 'max']:\n\n        print(f\"{stat.capitalize()} NDVI: {ndvi_analysis[condition][stat]}\")\n\n\nCorn Below Water Corn Analysis per MODIS:\nMean NDVI: [21.55594865 20.51568452  7.4782058  26.24400004 26.60275338 23.33767715\n 13.16068297 11.80940537 12.10314245]\nMax NDVI: [81.11699055 76.91399092 80.58758897 82.75593908 89.70690955 91.41303851\n 88.49125289 85.55169137 90.92957006]\n\nCorn Above Water Corn Analysis per MODIS:\nMean NDVI: [54.61076598 59.69546623 65.22443398 65.90975493 78.52357012 76.01061572\n 73.06511618 54.97502392 54.67252283]\nMax NDVI: [95.95130762 89.55483178 90.90481424 95.45510286 96.85160514 99.7260847\n 93.69302615 98.97050876 96.44831104]\n\n\n\ndef visualize_ndvi_histogram(ndvi_analysis):\n\n    plt.figure(figsize=(12, 6))\n\n    plt.hist(ndvi_analysis['corn_below_water']['ndvi'].flatten(), bins=30, alpha=0.5, label='Corn Below Water', color='blue')\n\n    plt.hist(ndvi_analysis['corn_above_water']['ndvi'].flatten(), bins=30, alpha=0.5, label='Corn Above Water', color='green')\n\n    plt.xlabel(\"NDVI values\")\n\n    plt.ylabel(\"Frequency\")\n\n    plt.title(\"Histogram of NDVI values for corn\")\n\n    plt.legend(loc='upper right')\n\nvisualize_ndvi_histogram(ndvi_analysis)\n\n\n\n\nWhat are the insights that we can derive from this module?\nWhat are the impacts of land being close to the water currently?\nWhat is the potential loss of productive land?\nWhere could there be errors given the sampling methods?"
  },
  {
    "objectID": "NASA-Acres-Climate-Resilience-Network.html#nasa-acres",
    "href": "NASA-Acres-Climate-Resilience-Network.html#nasa-acres",
    "title": "NASA Acres and Climate Resilience Network",
    "section": "NASA Acres",
    "text": "NASA Acres\nNASA Acres is NASA’s U.S.-focused agriculture and food security Consortium. NASA Acres is commissioned under NASA’s Applied Sciences Program and led by the University of Maryland, with over 30 partner institutions and growing. The consortium approach brings together public and private sectors, and allows for flexible partnerships and rapid action in delivering the benefits of NASA data and tools to U.S. agriculture decision makers. We work with people across the agriculture sector to develop Earth observation (EO)-based data and tools that strengthen U.S. agriculture."
  },
  {
    "objectID": "NASA-Acres-Climate-Resilience-Network.html#climate-resilience-network",
    "href": "NASA-Acres-Climate-Resilience-Network.html#climate-resilience-network",
    "title": "NASA Acres and Climate Resilience Network",
    "section": "Climate Resilience Network",
    "text": "Climate Resilience Network\nClimate Resilience Network has the goal of unifying the University of Maryland’s groundbreaking research with the immediate requirements of Maryland’s decision-makers to address the complexities of climate change as it affects our home. GEOG’s Grand Challenges project is aimed at promoting climate-resilient agriculture in Maryland, creating interactive tools designed to support research based decision-making.italicized text\nCOUNTY LEVEL SHAPEFILE https://resilience.climate.gov/datasets/nationalclimate::u-s-climate-and-coastal-inundation-projections-by-geography/explore?layer=0&location=2.619718%2C0.314282%2C1.74"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome SCHOOL Module 4: Climate and Agriculture",
    "section": "",
    "text": "Welcome to the fourth module of the SCHOOL curriculum!\nThe Science Core Heuristics for Open Science Outcomes in Learning (SCHOOL) is part of the NASA Transform to Open Science (TOPS) Training (TOPST) initiative, designed to teach the data science lifecycle using data from the NASA Earth Sciences division and to foster an inclusive culture of open science. You can learn more about the SCHOOL Project and other modules on the SCHOOL Project home page.\nThis TOPS SCHOOL module on the theme of ’Climate and Agriculture” provides a foundational understanding of the complex interplay between Earth’s ecosystems, climate and human-induced climate change, and environmental justice. We will explore how we can use spatial data for the study of climate, agriculture, and their impacts on vulnerable communities. You will also gain critical insights into how a changing climate affect agricultural resources people rely on for food. As you engage with the lessons, you will develop a comprehensive understanding of key concepts of earth’s climate system, the significance of social vulnerability to climate risks, and the tools available for analyzing environmental and agricultural data. Ultimately, these lessons will empower you to contribute meaningfully to discussions and actions pertaining to earth’s climate, agricultural systems, and environmental justice."
  },
  {
    "objectID": "index.html#module-4-climate-and-agriculture-datasets-and-use-cases-cover",
    "href": "index.html#module-4-climate-and-agriculture-datasets-and-use-cases-cover",
    "title": "Welcome SCHOOL Module 4: Climate and Agriculture",
    "section": "Module 4: Climate and Agriculture datasets and use cases cover:",
    "text": "Module 4: Climate and Agriculture datasets and use cases cover:\n\nNASA ACRES Climate Resilience Network: This lesson will use public research data for derived conclusions and to view the impacts climate change has on agriculture.\n\nLesson 1: NASA ACRES Climate Resilience Network\n\n\n\nStart Lesson 1\n\nThis course was made possible thanks to the work of our NASA Transform to Open Science (TOPS) team, our SCHOOL Open Science team, open science Subject Matter Experts (SMEs), and the SCHOOL Development team!"
  }
]