[
  {
    "objectID": "NASA-Acres-Climate-Resilience-Network.html",
    "href": "NASA-Acres-Climate-Resilience-Network.html",
    "title": "NASA Acres and Climate Resilience Network",
    "section": "",
    "text": "A regional view of the past with applications to the present. Python spatial and tabular analysis using multiple variables to look at a single time slice. This code can be a combination of cloud and local based analysis. A purpose for this exercise is to use use public research data for derived conclusions view the impacts climate change has on agriculture a look at what farmers can do and why we need to support them.\nNASA Acres has defined the Essential Agricultural Variables or EAVs. These were designed by NASA Acres to define the capabilities of the top satellite data scientists and practitioners who make up NASA Acres Research, Development, and Extension partners, and the needs of decision-making-collaborators already in our network, to identify an initial set of focus.\n\nCropland and Crop Type Mapping\nCrop and Crop Type Area Estimation\n\nDerived results will be the county level statistics of impacts of harvestable acreage. To achieve this, a basic workflow we can\n\nUse api to call in the CDL dataset to map crop types.\n\nThen\n\nAccess the Sea level rise (elevation dataset) to identify new areas of potential areas that are at risk of future flooding. Clip to county of interest\nCompare the CDL with the SLR mask and with out to identify the NOAA estimated loss of land.\n\nThen using MODIS create a time series for NDVI of the masked crop land, derive insights about trends in NDVI\n\nUse NDVI to create a time series looking backwards in time at areas that have experienced flooding to visualize the moving from productive farms to moderate quality.\n\nThis all together would allow us to make a predictive analysis for Maryland in the future under the projections of sea level rise. Given the current conditions, subtracting the sea level rise inundated areas. Then given the remaining areas, making predictions about the trends of NDVI given the trends in historical areas that are near impacted areas. We cannot say that “sea level rise is driving the decrease” because there are many other factor and decisions that farmers make around how much to plant, how much to harvest, chemicals applied, growing degree days, soil and soil moisture conditions. But this module should provide the ability to make insights about potential causes and impacts.\nThe data story that we have derived is about sea level rise in Maryland and the impact that it has on the production levels with in the state. From this module, we can provide students with the ability to draw from multiple data sources, as well as derive insights using historical and future viewing data sets.\nThe U.S. Mid-Atlantic has seen higher rates of sea level rise, marshes may be especially vulnerable. “In the Chesapeake Bay, sea level rise has already contributed to the degradation of over 80,000 ha (70%) of tidal marsh” (Taylor et al. 2020). This view can help us to understand the impacts that small levels of sea level rise have on land.\nWe can prompt the user to think about future impacts outside the direct sea level rise projections, allowing them to include a more full picture, and finally using that picture to identify economic impacts that action or inaction causes. This begs the question, what can the public do to enact changes, rather than putting the pressure on farmers to change?\n\n!pip install arcgis arcgis-mapping rasterio earthaccess\n\nRequirement already satisfied: arcgis in c:\\users\\jmartine\\appdata\\local\\esri\\conda\\envs\\agsdev\\lib\\site-packages (2.2.0)\n\n\n\n\n\n\n#import the required packages\nimport geopandas as gpd\nimport rasterio\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom shapely.geometry import box\nimport numpy as np\nimport requests\nimport xml.etree.ElementTree as ET\nimport matplotlib.pyplot as plt\nfrom io import BytesIO\nimport os\nfrom rasterio.warp import calculate_default_transform, reproject, Resampling\nfrom datetime import datetime, timedelta\n\n\n#define fuctions\n\ndef reproject_raster(src_dataset, src_crs, src_transform, dst_crs='EPSG:4326'):\n    dst_crs = rasterio.crs.CRS.from_string(dst_crs)\n    dst_transform, dst_width, dst_height = calculate_default_transform(\n        src_crs, dst_crs,\n        src_dataset.width, src_dataset.height,\n        *src_dataset.bounds)\n    dst_kwargs = src_dataset.meta.copy()\n    dst_kwargs.update({\n        'crs': dst_crs,\n        'transform': dst_transform,\n        'width': dst_width,\n        'height': dst_height})\n    dst_data = np.zeros((src_dataset.count, dst_height, dst_width), dtype=src_dataset.dtypes[0])\n    for i in range(1, src_dataset.count + 1):\n        reproject(\n            source=rasterio.band(src_dataset, i),\n            destination=dst_data[i-1],\n            src_transform=src_transform,\n            src_crs=src_crs,\n            dst_transform=dst_transform,\n            dst_crs=dst_crs,\n            resampling=Resampling.nearest)\n    return dst_data, dst_kwargs\n\ndef format_cdl_url(fips,year):\n    base_url = \"https://nassgeodata.gmu.edu/axis2/services/CDLService/GetCDLFile\"\n    url = f\"{base_url}?year={year}&fips={fips}\"\n    return url\n\ndef get_srl_raster():\n    slr_path = 'data/MD_East_slr_depth_3_5ft.tif'\n    with rasterio.open(slr_path) as slr_raster:\n            slr_meta = slr_raster.meta\n            slr_meta['nodata'] = 0\n            slr_reprojected, slr_meta_reprojected = reproject_raster(src_dataset=slr_raster, src_crs=slr_meta['crs'], src_transform=slr_meta['transform'])\n    return slr_reprojected, slr_meta_reprojected"
  },
  {
    "objectID": "NASA-Acres-Climate-Resilience-Network.html#combine-and-compare-the-results",
    "href": "NASA-Acres-Climate-Resilience-Network.html#combine-and-compare-the-results",
    "title": "NASA Acres and Climate Resilience Network",
    "section": "Combine and compare the results",
    "text": "Combine and compare the results\n\nndvi_resampled, ndvi_resampled_meta = resample_using_cdl(ndvi, meta, cdl_meta_reprojected)\n\nslr_resampled, slr_resampled_meta = resample_using_cdl(slr_reprojected, slr_meta_reprojected, cdl_meta_reprojected)\n\nprint(\"CDL shape:\", cdl_reprojected.shape)\n\nprint(\"Original NDVI shape:\", ndvi.shape)\n\nprint(\"Resampled NDVI shape:\", ndvi_resampled.shape)\n\nprint(\"Original SLR shape:\", slr_reprojected.shape)\n\nprint(\"Resampled SLR shape:\", slr_resampled.shape)\n\nCDL shape: (1, 1681, 2153)\nOriginal NDVI shape: (9, 166, 402)\nResampled NDVI shape: (9, 1681, 2153)\nOriginal SLR shape: (1, 44790, 28460)\nResampled SLR shape: (1, 1681, 2153)\n\n\n\ndef mask_rasters(cdl_raster, slr_raster, ndvi_rasters):\n\n    corn_mask = cdl_raster == 1\n\n    ABOVE_water_mask = slr_raster <= 1\n\n    corn_above_water_mask = corn_mask & ~ABOVE_water_mask\n\n    corn_below_water_mask = corn_mask & ABOVE_water_mask\n\n    corn_above_water_mask = corn_above_water_mask[0,:,:]\n\n    corn_below_water_mask = corn_below_water_mask[0,:,:]\n\n    masked_ndvi_below_water = ndvi_rasters[:, corn_below_water_mask]\n\n    masked_ndvi_above_water = ndvi_rasters[:, corn_above_water_mask]\n\n    return {\n\n        'corn_below_water': {\n\n            'mask': corn_below_water_mask,\n\n            'ndvi': masked_ndvi_below_water,\n\n            'mean': np.mean(masked_ndvi_below_water, axis=1) if masked_ndvi_below_water.size > 0 else None,\n\n            'min': np.min(masked_ndvi_below_water, axis=1) if masked_ndvi_below_water.size > 0 else None,\n\n            'max': np.max(masked_ndvi_below_water, axis=1) if masked_ndvi_below_water.size > 0 else None\n\n        },\n\n        'corn_above_water': {\n\n            'mask': corn_above_water_mask,\n\n            'ndvi': masked_ndvi_above_water,\n\n            'mean': np.mean(masked_ndvi_above_water, axis=1) if masked_ndvi_above_water.size > 0 else None,\n\n            'min': np.min(masked_ndvi_above_water, axis=1) if masked_ndvi_above_water.size > 0 else None,\n\n            'max': np.max(masked_ndvi_above_water, axis=1) if masked_ndvi_above_water.size > 0 else None\n\n        }\n\n    }\n\n\ndef visualize_ndvi_analysis(ndvi_analysis, days):\n\n    plt.figure(figsize=(12, 6))\n\n    plt.subplot(1, 2, 1)\n\n    plt.plot(days, ndvi_analysis['corn_above_water']['mean'], label='Corn Above Water', color='green')\n\n    plt.plot(days, ndvi_analysis['corn_below_water']['mean'], label='Corn Below Water', color='blue')\n\n    plt.title('Mean NDVI')\n\n    plt.xlabel('Days')\n\n    plt.xticks(rotation=90)\n\n    plt.ylabel('NDVI')\n\n    plt.legend()\n\n    plt.subplot(1, 2, 2)\n\n    plt.plot(days, ndvi_analysis['corn_above_water']['max'], label='Corn Above Water', color='green')\n\n    plt.plot(days, ndvi_analysis['corn_below_water']['max'], label='Corn Below Water', color='blue')\n\n    plt.title('Maximum NDVI')\n\n    plt.xlabel('Days')\n\n    plt.xticks(rotation=90)\n\n    plt.ylabel('NDVI')\n\n    plt.legend()\n\n    plt.tight_layout()\n\n    plt.show()\n\n\nndvi_analysis = mask_rasters(cdl_reprojected, slr_resampled, ndvi_resampled)\n\nvisualize_ndvi_analysis(ndvi_analysis, day)\n\n\n\n\n\nfor condition in ['corn_below_water', 'corn_above_water']:\n\n    print(f\"\\n{condition.replace('_', ' ').title()} Corn Analysis per MODIS:\")\n\n    for stat in ['mean', 'max']:\n\n        print(f\"{stat.capitalize()} NDVI: {ndvi_analysis[condition][stat]}\")\n\n\nCorn Below Water Corn Analysis per MODIS:\nMean NDVI: [21.55594865 20.51568452  7.4782058  26.24400004 26.60275338 23.33767715\n 13.16068297 11.80940537 12.10314245]\nMax NDVI: [81.11699055 76.91399092 80.58758897 82.75593908 89.70690955 91.41303851\n 88.49125289 85.55169137 90.92957006]\n\nCorn Above Water Corn Analysis per MODIS:\nMean NDVI: [54.61076598 59.69546623 65.22443398 65.90975493 78.52357012 76.01061572\n 73.06511618 54.97502392 54.67252283]\nMax NDVI: [95.95130762 89.55483178 90.90481424 95.45510286 96.85160514 99.7260847\n 93.69302615 98.97050876 96.44831104]\n\n\n\ndef visualize_ndvi_histogram(ndvi_analysis):\n\n    plt.figure(figsize=(12, 6))\n\n    plt.hist(ndvi_analysis['corn_below_water']['ndvi'].flatten(), bins=30, alpha=0.5, label='Corn Below Water', color='blue')\n\n    plt.hist(ndvi_analysis['corn_above_water']['ndvi'].flatten(), bins=30, alpha=0.5, label='Corn Above Water', color='green')\n\n    plt.xlabel(\"NDVI values\")\n\n    plt.ylabel(\"Frequency\")\n\n    plt.title(\"Histogram of NDVI values for corn\")\n\n    plt.legend(loc='upper right')\n\nvisualize_ndvi_histogram(ndvi_analysis)\n\n\n\n\nWhat are the insights that we can derive from this module?\nWhat are the impacts of land being close to the water currently?\nWhat is the potential loss of productive land?\nWhere could there be errors given the sampling methods?"
  },
  {
    "objectID": "NASA-Acres-Climate-Resilience-Network.html#nasa-acres",
    "href": "NASA-Acres-Climate-Resilience-Network.html#nasa-acres",
    "title": "NASA Acres and Climate Resilience Network",
    "section": "NASA Acres",
    "text": "NASA Acres\nNASA Acres is NASA’s U.S.-focused agriculture and food security Consortium. NASA Acres is commissioned under NASA’s Applied Sciences Program and led by the University of Maryland, with over 30 partner institutions and growing. The consortium approach brings together public and private sectors, and allows for flexible partnerships and rapid action in delivering the benefits of NASA data and tools to U.S. agriculture decision makers. We work with people across the agriculture sector to develop Earth observation (EO)-based data and tools that strengthen U.S. agriculture."
  },
  {
    "objectID": "NASA-Acres-Climate-Resilience-Network.html#climate-resilience-network",
    "href": "NASA-Acres-Climate-Resilience-Network.html#climate-resilience-network",
    "title": "NASA Acres and Climate Resilience Network",
    "section": "Climate Resilience Network",
    "text": "Climate Resilience Network\nClimate Resilience Network has the goal of unifying the University of Maryland’s groundbreaking research with the immediate requirements of Maryland’s decision-makers to address the complexities of climate change as it affects our home. GEOG’s Grand Challenges project is aimed at promoting climate-resilient agriculture in Maryland, creating interactive tools designed to support research based decision-making.italicized text\nCOUNTY LEVEL SHAPEFILE https://resilience.climate.gov/datasets/nationalclimate::u-s-climate-and-coastal-inundation-projections-by-geography/explore?layer=0&location=2.619718%2C0.314282%2C1.74"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome SCHOOL Module 4: Climate and Agriculture",
    "section": "",
    "text": "Welcome to the fourth module of the SCHOOL curriculum!\nThe Science Core Heuristics for Open Science Outcomes in Learning (SCHOOL) is part of the NASA Transform to Open Science (TOPS) Training (TOPST) initiative, designed to teach the data science lifecycle using data from the NASA Earth Sciences division and to foster an inclusive culture of open science. You can learn more about the SCHOOL Project and other modules on the SCHOOL Project home page.\nThis TOPS SCHOOL module on the theme of ’Climate and Agriculture” provides a foundational understanding of the complex interplay between Earth’s ecosystems, climate and human-induced climate change, and environmental justice. We will explore how we can use spatial data for the study of climate, agriculture, and their impacts on vulnerable communities. You will also gain critical insights into how a changing climate affect agricultural resources people rely on for food. As you engage with the lessons, you will develop a comprehensive understanding of key concepts of earth’s climate system, the significance of social vulnerability to climate risks, and the tools available for analyzing environmental and agricultural data. Ultimately, these lessons will empower you to contribute meaningfully to discussions and actions pertaining to earth’s climate, agricultural systems, and environmental justice."
  },
  {
    "objectID": "index.html#module-4-climate-and-agriculture-datasets-and-use-cases-cover",
    "href": "index.html#module-4-climate-and-agriculture-datasets-and-use-cases-cover",
    "title": "Welcome SCHOOL Module 4: Climate and Agriculture",
    "section": "Module 4: Climate and Agriculture datasets and use cases cover:",
    "text": "Module 4: Climate and Agriculture datasets and use cases cover:\n\nNASA ACRES Climate Resilience Network: This lesson will use public research data for derived conclusions and to view the impacts climate change has on agriculture.\n\nLesson 1: NASA ACRES Climate Resilience Network\n\n\n\nStart Lesson 1\n\nThis course was made possible thanks to the work of our NASA Transform to Open Science (TOPS) team, our SCHOOL Open Science team, open science Subject Matter Experts (SMEs), and the SCHOOL Development team!"
  },
  {
    "objectID": "test.html",
    "href": "test.html",
    "title": "NASA Acres and Climate Resilience Network",
    "section": "",
    "text": "Test"
  },
  {
    "objectID": "m401-nasa-acres-climate-resilience-network.html",
    "href": "m401-nasa-acres-climate-resilience-network.html",
    "title": "NASA Acres and Climate Resilience Network",
    "section": "",
    "text": "Technical Skills:\n\nAccess and process satellite imagery using NASA’s APPEARS platform\nWork with different spatial data formats and resolutions\nPerform raster analysis and visualization\nCalculate and interpret NDVI values from multispectral satellite data\n\nAnalytical Skills:\n\nCompare vegetation health between areas affected and unaffected by saltwater intrusion\nEvaluate limitations and uncertainties in geospatial analysis\n\n\n\n\nUnderstand the relationship between sealevel rise, salt water intrusion, and agricultural productivity in Maryland’s coastal regions\nLearn to work with and analyze multiple types of geospatial data (raster datasets) using Python\nInterpret vegetation health patterns using satellite-derived NDVI measurements\nEvaluate potential future impacts of sea level rise on agricultural land\n\nThis lesson will allow the learner to gain a deper understanding of the followinf concepts - Recognizing the economic importance of agriculture in Maryland - Understanding how sea level rise is impacting coastal farming - Identifying the role of remote sensing in monitoring environmental changes - Connecting local agricultural challenges to broader climate change impacts\nThis module can help to contextualize the impact of saltwater inundation. For this module, we will identify cropland, and then, using the NOAA sea level rise estimations, we can calculate the difference in productivity using NDVI as a measure of vegetation health. A graphical time series allows us to see areas impacted by sea level rise.\nFirst, we can find the county-level statistics of harvestable acreage. We are using the Crop Data Layer (CDL) from the United States Department of Agriculture National Agriculture Statistics Service (USDA NASS)\n\nUse API to call in the CDL dataset to map crop types.\n\nAfter getting familiar with the dataset, we can modify it. Because we are interested in the impact of sea level rise and the effect we can find that data from the National Oceanic and Atmospheric Administration\n\nAccess the Sea level rise (elevation dataset) to identify new areas of potential areas that are at risk of future flooding. Clip to county of interest\nCompare the CDL with the SLR mask and without to identify the NOAA estimated loss of land.\n\nThen using Landsat create a time series for the Normalized Difference Vegetation Index (NDVI) of the masked cropland, derive insights about trends in NDVI.\n\nUse NDVI to create a time series looking back in time at areas that have experienced flooding to visualize the movement from productive farms to moderate quality.\n\nThis all together would allow us to make a predictive analysis for Maryland in the future under the projections of sea level rise. Given the current conditions, subtracting the sea level rise inundated areas.\nThe data story we have derived concerns sea level rise in Maryland and its impact on production levels within the state. This module can help students draw from multiple data sources and derive insights using historical and future viewing data sets.\nWe can prompt the user to think about future impacts outside the direct sea level rise projections, allowing them to include a full picture and finally using that picture to identify economic impacts that action or inaction causes. This begs the question: What can the public do to enact changes rather than putting pressure on farmers to change?"
  },
  {
    "objectID": "m401-nasa-acres-climate-resilience-network.html#nasa-acres",
    "href": "m401-nasa-acres-climate-resilience-network.html#nasa-acres",
    "title": "NASA Acres and Climate Resilience Network",
    "section": "NASA Acres",
    "text": "NASA Acres\nNASA Acres is NASA’s consortium focused on agriculture and food security in the United States.\n1\nNASA Acres brings together actors throughout the agricultural community to share methods, data, and technology to work towards a richer knowledge about past and present agricultural land use, productivity, and sustainability in the U.S. The mission is also to create a stronger agricultural technology workforce ready to tackle the challenges of climate change and global hazards to U.S. agriculture and food security.\nNASA Acres has defined the Essential Agricultural Variables (EAVs) to address this problem. These were designed by NASA Acres to define the capabilities of the top satellite data scientists and practitioners who make up NASA Acres Research, Development, and Extension partners, and the needs of decision-making-collaborators already in our network, to identify an initial set of focus.\n\nCropland and Crop Type Mapping\nCrop and Crop Type Area Estimation\n\nThis can help us determine the changes in the cropland. As things change, we can tell how much and what is actually changing because we have mapped and studied this area. The need for accurate, consistent study within these areas of agriculture is vital for describing changes as they occur.\n\nWhat is Remote Sensing?\nRemote sensing is the action of measuring the reflectance of energy from objects. For this module we are using Landsat, a passive satellite that relies on the sun to send out energy and the sensor measures the reflectance.\n\nFrom this, we can use both the visible (red, green, blue) reflectance and the infrared light to detect objects on the ground.\nThis is an example of a Landsat image. Compared to the aerial image, the Landsat image appears pixelated. This is because Landsat takes all the reflectances within each 30 by 30-meter square in the ground to get one value.\n\nGenerate the pull for the NDVI data. This data pull comes from The Application for Extracting and Exploring Analysis Ready Samples (AppEEARS), which offers a simple and efficient way to access data archives. We will use Landsat for this module, but a variety of datasets are available.\n\nNDVI is a commonly used calculation as an indicator for the health of vegetation based on the ratio of reflectance of red to near-infrared values within the electromagnetic spectrum. If you want to learn more."
  },
  {
    "objectID": "m401-nasa-acres-climate-resilience-network.html#why-agriculture",
    "href": "m401-nasa-acres-climate-resilience-network.html#why-agriculture",
    "title": "NASA Acres and Climate Resilience Network",
    "section": "WHY AGRICULTURE?",
    "text": "WHY AGRICULTURE?\nAccording to the United States Department of Agriculture (USDA) in 2023 farming operations in Maryland (MD) were an estimated 2,000,000 acres. For grain corn in MD, in 2023, 440,000 acres were harvested. The total commercial value for all corn in the state was $355,740,000.\nFood is a vital resource for direct and indirect consumption. However, as salt water intrudes into agricultural land, the impacts and consequences are just beginning to be felt.\nAs researchers, we must come to the same understanding of what is important in order to understand why we are studying agriculture."
  },
  {
    "objectID": "m401-nasa-acres-climate-resilience-network.html#climate-smart-agriculture-in-maryland",
    "href": "m401-nasa-acres-climate-resilience-network.html#climate-smart-agriculture-in-maryland",
    "title": "NASA Acres and Climate Resilience Network",
    "section": "CLIMATE SMART AGRICULTURE IN MARYLAND",
    "text": "CLIMATE SMART AGRICULTURE IN MARYLAND\nWhy is agriculture important in Maryland and what is salt water intrusion?\nResearchers found that salt was intruding on coastal agricultural areas.\nSaltwater impacted coastal farming on a broad scale. Although there was some debate around the area lost, estimates put land losses between 8,000 to 140,000 ha of surface inundation (Mondal et al. 2023; Taylor et al. 2020).\n2\nResearchers use satellite remote sensing to develop machine learning models built on ground-truthed data to identify salt patches in the mid-Atlantic region of the US.\nThe U.S. Mid-Atlantic has seen higher rates of sea level rise, marshes may be especially vulnerable. “In the Chesapeake Bay, sea level rise has already contributed to the degradation of over 80,000 ha (70%) of tidal marsh” (Taylor et al. 2020). This view can help us understand the impacts of small sea level rise on land.\n\nSaltwater Intrusion\nTo understand more about saltwater intrusion in Maryland, run this code and watch the video that explains the causes and effects.\n\nLearn more about saltwater inundation from the National Oceanic and Atmospheric Administration program titled Coastal Farming Challenges: Flooding, Salt, and Land Loss.\nBelow is a simplified illustration of saltwater intrusion:\n3"
  },
  {
    "objectID": "m401-nasa-acres-climate-resilience-network.html#introductory-code",
    "href": "m401-nasa-acres-climate-resilience-network.html#introductory-code",
    "title": "NASA Acres and Climate Resilience Network",
    "section": "INTRODUCTORY CODE",
    "text": "INTRODUCTORY CODE\n\nAccessing Data\nNASA Earth data requires a data pull request, this takes time to ‘order’, we can run this now to give the program time to gather the data we are requesting. This code chunk is used for local downloads if you have not yet downloaded data:\n\n## NASA Earth Data username and password\n# USERNAME = \"USERNAME\" ## ENTER HERE\n# PASSWORD = \"PASSWORD\" ## ENTER HERE\n\n## The submit the Landsat tiles, we have provided you with the geojson file of Talbot County.\n## If you wish to use another county, download, and path to the other county geojson file\ncounty_path = 'data/Talbot_County.geojson' # Path to county\n\n\n# Conversion to geopandas data frame\ncounty_data =  gpd.read_file(county_path)\n # Reproject the county_data to landsat\ncounty_reprojected = county_data.to_crs('EPSG:4326')\n\nyear = 2018 # Year of interest\n\n\n# Get the token from your Earth Data account\ntoken = requests.post('https://appeears.earthdatacloud.nasa.gov/api/login',auth=(USERNAME, PASSWORD)).json()['token']\n\n\ntask = {'task_type': 'area',\n          'task_name': 'Talbot_County',\n          'params': {\n                    'dates': [{'startDate':  f'06-01-{year}' , 'endDate': f'09-30-{year}'}],# Set the start and end dates for summer sections\n                    'layers': [{'layer': 'SR_B4', 'product':'L08.002'},\n                               {'layer': 'SR_B5', 'product':'L08.002'}], # Data of interest is the NDVI values\n                    'geo': { #The geo field should contain the geoJSON, currently it is in a set\n                        'type': 'FeatureCollection',\n                        'features': [{\n                            'type': 'Feature',\n                            'properties': {},\n                            'geometry': county_reprojected.geometry.iloc[0].__geo_interface__ #Extracting the geometry from the GeoPandas DataFrame as a GeoJSON-compatible dictionary\n                        }]\n                    },\n                    \"output\": {\"format\": {\"type\": \"geotiff\"},\n                              \"projection\": \"native\"}}}\n\ntask_id = requests.post('https://appeears.earthdatacloud.nasa.gov/api/task',json=task,headers={'Authorization': f'Bearer {token}'}).json()\n\nYou should receive an email from APPEEARS that says the task has started."
  },
  {
    "objectID": "m401-nasa-acres-climate-resilience-network.html#working-with-rasters",
    "href": "m401-nasa-acres-climate-resilience-network.html#working-with-rasters",
    "title": "NASA Acres and Climate Resilience Network",
    "section": "Working with Rasters",
    "text": "Working with Rasters\n\nReading Raster Data\nThere are two ways to display information: vectors (points, lines, polygons) or rasters. Rasters are continuous sheets that are layered across a space; they are made up of pixels. Each pixel represents the ground beneath it. For example, if a raster pixel is 30 by 30 meters, that means a single pixel represents 30 by 30 meters on the ground.\n\nfips = \"24041\" # County code for all US counties, remember we called this in the first code chunk when we used the geojson to gather Landsat NDVI images\nyear = 2018 # Year of interest\n\n# The CDL (crop data layer) is the authoritative data layer for the US crops\nbase_url = \"https://nassgeodata.gmu.edu/axis2/services/CDLService/GetCDLFile\"\n\n# Pulling the data from the online source using the requests library allows us to access the data without needing to download the dataset\nresponse = requests.get(f\"{base_url}?year={year}&fips={fips}\")\nprint(response.content)\nroot = ET.fromstring(response.content)\ntif_url = root.find('.//returnURL').text\ncdl_data = rasterio.open(tif_url)\ncdl_meta = cdl_data.meta\ndata = cdl_data.read(1)\n\nb'<ns1:GetCDLFileResponse xmlns:ns1=\"http://cropscape.csiss.gmu.edu/CDLService/\"><returnURL>https://nassgeodata.gmu.edu/webservice/nass_data_cache/byfips/CDL_2018_24041.tif</returnURL></ns1:GetCDLFileResponse>'\n\n\n\n\nDisplaying Raster Data\nMISSING TEXT\n\nbounds = transform_bounds(cdl_data.crs, 'EPSG:4326', *cdl_data.bounds)\n\n# Calculate the center of the image for the map\ncenter_lat = (bounds[1] + bounds[3]) / 2\ncenter_lon = (bounds[0] + bounds[2]) / 2\n\n# Create a base map centered on the image\nm = folium.Map(location=[center_lat, center_lon], zoom_start=10)\n\n# Add the raster layer to the map\nimg = folium.raster_layers.ImageOverlay(\n    data,\n    bounds=[[bounds[1], bounds[0]], [bounds[3], bounds[2]]],\n\n)\nimg.add_to(m)\n\n# Add the colormap to the map\n\n# Add layer control\nfolium.LayerControl().add_to(m)\ndisplay(m)\n\nMake this Notebook Trusted to load map: File -> Trust Notebook\n\n\nZoom around in on the map. Look at the raster structure, the squares stacked next to each other, representing an area on the ground.\n\n\nSpatially Project Raster Data\nWhen working with geographic data, we have to begin by knowing that all of our data is in the right space on the globe. We begin with a function for reprojecting rasters. This is one of the keys when working with spatial data: ensuring that all of the data is based on the same spatial reference.\nReprojecting requires a resampling method; for this, we use the nearest neighbor’s resampling.\n\n\ndef reproject_raster(src_dataset, src_crs, src_transform, dst_crs):\n    # Convert the destination CRS string into a CRS object that rasterio can use\n    # For example, 'EPSG:4326' becomes a python coordinate object\n    dst_crs = rasterio.crs.CRS.from_string(dst_crs)\n\n    # Calculate the new dimensions and transformation matrix for the output raster\n    # This ensures the whole image fits in the new coordinate system\n    dst_transform, dst_width, dst_height = calculate_default_transform(\n        src_crs,                    # Current coordinate system\n        dst_crs,                    # Target coordinate system\n        src_dataset.width,          # Current image width\n        src_dataset.height,         # Current image height\n        *src_dataset.bounds         # The geographical bounds of the image\n    )\n\n    # Copy the metadata from the source dataset\n    # This includes things like data type, number of bands, etc.\n    dst_kwargs = src_dataset.meta.copy()\n\n    # Update the metadata with the new CRS, transform, width, and height\n    dst_kwargs.update({\n        'crs': dst_crs,\n        'transform': dst_transform,\n        'width': dst_width,\n        'height': dst_height\n    })\n\n    # Create an empty array to store the reprojected data\n    # Shape is (number of bands, new height, new width)\n    dst_data = np.zeros((src_dataset.count, dst_height, dst_width),\n                       dtype=src_dataset.dtypes[0])\n    reproject(\n        source=rasterio.band(src_dataset,1),\n        destination=dst_data,             # Where to store the result\n        src_transform=src_transform,           # Current transformation\n        src_crs=src_crs,                      # Current coordinate system\n        dst_transform=dst_transform,           # New transformation\n        dst_crs=dst_crs,                      # New coordinate system\n        resampling=Resampling.nearest         # Use nearest neighbor resampling\n    )\n\n    # Return both the reprojected data and the updated metadata\n    return dst_data, dst_kwargs\n\n\n\nAccess data with API\nTo understand the nature of Maryland agriculture we can begin by using the CDL. This raster dataset comes at a 30-meter spatial resolution. We can access this data through their API. The current configuration allows data to be pulled at the county level.\nCOUNTY LEVEL CDL FOR FIPS\nThis view provides insight into the common commodities that are grown in Maryland in the desired year.\n\ncdl_reprojected, cdl_meta_reprojected = reproject_raster(cdl_data, cdl_meta['crs'], cdl_meta['transform'], 'EPSG:4326')\n\nThe eastern seaboard has seen changes in the sea level along with increased flooding and the decrease in the predictability of water flow from rivers. This data comes from NOAA, this raster is the projection of inundated areas by the year 2050. Data access can be found here.\n\n# Path to the stored sea level rise tif file\nslr_path = 'data/MD_East_slr_depth_3_5ft.tif'\n\n# This allows us to open the raster file, then reproject and close the original file so we are not storing duplicates of the raster\nwith rasterio.open(slr_path) as slr_raster:\n    slr_meta = slr_raster.meta.copy()\n    slr_meta['nodata'] = 0\n\n    # Reproject\n    slr_reprojected, slr_meta_reprojected = reproject_raster(\n        slr_raster,\n        slr_meta['crs'],\n        slr_meta['transform'],\n        'EPSG:4326')\n\n\n\nWorking with NASA APPEEARS Data\nYou should have received an email from APPEEARS letting you know your task has completed. If you have not received this, go to the APPEEARS website to view the progress by clicking on the explore tab and viewing the TALBOT_COUNTY request.\n\n## NASA hosts their Landsat data in their program called APPEEARS\n# To access the data you must probe it from cold storage, that was the initial code we ran\n# If you wish to learn more, visit the API documentation from appeears\ndef doy_2_date(day_of_year_str): # This function changes the DOY value to a more easily readable format (from Julian day of the year to date based on month day year)\n              year = int(day_of_year_str[:4]) # year string to integer\n              day_of_year = int(day_of_year_str[4:]) # Julian day string to integer\n              start_date = datetime(year, 1, 1) # using datetime to change year to first day first month of the year of interest\n              target_date = start_date + timedelta(days=day_of_year - 1) # add the DOY of acquisition to the year\n              return target_date.strftime('%m-%d-%Y') ## return proper formatting\n\n\nbundle = requests.get(f'https://appeears.earthdatacloud.nasa.gov/api/bundle/{task_id[\"task_id\"]}',headers={'Authorization': f'Bearer {token}'}).json()\nQA_data = {}\ndata = {} # Create an empty dictionary to collect the data from appeears\nbundle\n\n{'files': [{'sha256': '17b628ac64fdfdcb7b9088f71a1e7075c6d58b2d6124b4d1025cca482cdcb423',\n   'file_id': 'f0e3a5b2-ad6a-4873-876d-d6a50ae33926',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_B4_CU_doy2018157_aid0001.tif',\n   'file_size': 4611159,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_B4_CU_doy2018157_aid0001.tif'},\n  {'sha256': 'cd4c6e76ec2304ec2d5b820e9663b6c70e7850fca554736a08293c423e7e2583',\n   'file_id': '161ca84b-88b0-40bf-8b03-3de4dc6bb721',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_B4_CU_doy2018166_aid0001.tif',\n   'file_size': 3943037,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_B4_CU_doy2018166_aid0001.tif'},\n  {'sha256': '374f4efb27e370a956b8b92dffeae795fdef3f8969c2f5f09219d315b0cb9f48',\n   'file_id': 'f7cc7856-a938-430b-baca-a5bb11cd2ce7',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_B4_CU_doy2018173_aid0001.tif',\n   'file_size': 4667202,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_B4_CU_doy2018173_aid0001.tif'},\n  {'sha256': '890c8e09cf4bea742b268778abff84417f78729a865ebb0f8fbc788d5b2b4176',\n   'file_id': '975948b7-b7f9-442e-b7f5-5d533e7069ab',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_B4_CU_doy2018182_aid0001.tif',\n   'file_size': 3892355,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_B4_CU_doy2018182_aid0001.tif'},\n  {'sha256': '81a6ab4dfbcb652e0096914245157101e2f89faf7d34d4ad4d23e8f01436df2e',\n   'file_id': '5da93084-9769-4ea7-983b-4f749a441f8d',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_B4_CU_doy2018189_aid0001.tif',\n   'file_size': 4067994,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_B4_CU_doy2018189_aid0001.tif'},\n  {'sha256': '14c84cc240e9acd58cf51d140faf112dba0a5fb22ac441d0c6130258db0e825b',\n   'file_id': '10472ca4-bd74-42ff-9910-c138381590f8',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_B4_CU_doy2018198_aid0001.tif',\n   'file_size': 4443165,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_B4_CU_doy2018198_aid0001.tif'},\n  {'sha256': 'b6e27060e2b6682a4874449aa4021e2d198f600573e8c3b73da7aab3e17e8a6c',\n   'file_id': '77fd609f-b6df-4334-94da-ed14a80e60cf',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_B4_CU_doy2018205_aid0001.tif',\n   'file_size': 4287187,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_B4_CU_doy2018205_aid0001.tif'},\n  {'sha256': '8123dffd10a7c57983b1ca07cdaa97a79b670044c2070a8187e011b7e14f66b0',\n   'file_id': '8d438908-5b12-4637-ab23-9ddb7d04baec',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_B4_CU_doy2018214_aid0001.tif',\n   'file_size': 4453858,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_B4_CU_doy2018214_aid0001.tif'},\n  {'sha256': '0878011997fda32c18743445ad5d471fdbdcc391b9483d5daa63336669629eff',\n   'file_id': 'e4238b9f-3314-4818-81d3-7bcc06add73c',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_B4_CU_doy2018221_aid0001.tif',\n   'file_size': 3786880,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_B4_CU_doy2018221_aid0001.tif'},\n  {'sha256': '6db277d8fcf6e1e97d52f9027009f5f25f37d5a8eaca663c2dcc8f247ab50175',\n   'file_id': '4553c456-d4cd-4ce9-8c7e-e9f2ea26a1b6',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_B4_CU_doy2018230_aid0001.tif',\n   'file_size': 4802097,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_B4_CU_doy2018230_aid0001.tif'},\n  {'sha256': 'bf976180bca64a9001cd69cf88a28c012e5dbc20e3348c1473ee5bbdecb0d1ba',\n   'file_id': '00f980b6-f093-4c0e-89a3-77dd1dae2b3d',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_B4_CU_doy2018237_aid0001.tif',\n   'file_size': 4608338,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_B4_CU_doy2018237_aid0001.tif'},\n  {'sha256': '766a69fc0f40dc4abf2c5430d3417bdcbc758a234d5b1cdc6a872c82bc6eebb4',\n   'file_id': '1a85f4cc-98dc-4096-9d8e-ae71909a42ca',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_B4_CU_doy2018246_aid0001.tif',\n   'file_size': 3835018,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_B4_CU_doy2018246_aid0001.tif'},\n  {'sha256': '3ba882e953574d8035ed3cce49aa144381858d96be2debff8a26f4736a344a6d',\n   'file_id': '1dab5775-be86-46ea-bd75-63cf003d28c6',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_B4_CU_doy2018253_aid0001.tif',\n   'file_size': 4661995,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_B4_CU_doy2018253_aid0001.tif'},\n  {'sha256': '80a9cdabeb6efab41a7edbc9dfd6bd9c6f7c9812bb9287724322551a995dbdaa',\n   'file_id': '81112daf-788e-4609-97fb-378ecbcbb167',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_B4_CU_doy2018262_aid0001.tif',\n   'file_size': 3660368,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_B4_CU_doy2018262_aid0001.tif'},\n  {'sha256': '5046133954e032586bef7859cb738e1d3f3692f8b2ae250d927a9af6cf1387bc',\n   'file_id': 'f4948569-de6f-4d89-8721-9e394984fba1',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_B4_CU_doy2018269_aid0001.tif',\n   'file_size': 3682402,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_B4_CU_doy2018269_aid0001.tif'},\n  {'sha256': '86a9ec78d98048649d2983cd007e216434333347130ca70e1f665b0d25190051',\n   'file_id': 'cc2794af-4c1e-4c92-91dc-cc2b72fc4645',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_QA_AEROSOL_CU_doy2018157_aid0001.tif',\n   'file_size': 288081,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_QA_AEROSOL_CU_doy2018157_aid0001.tif'},\n  {'sha256': '2e1f5a08bb02060c6cc3ebc17a58893c44ad9f9f0c9039e9d981aade22e2969c',\n   'file_id': '2de93a38-0bb3-48b2-a4db-525004bcbf7b',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_QA_AEROSOL_CU_doy2018166_aid0001.tif',\n   'file_size': 163000,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_QA_AEROSOL_CU_doy2018166_aid0001.tif'},\n  {'sha256': 'baba28464d006aabe325118e0cb443e3d749b03545b555cc8ba9b763e0645180',\n   'file_id': 'c024672b-d40d-46b1-a261-05ea31afda28',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_QA_AEROSOL_CU_doy2018173_aid0001.tif',\n   'file_size': 59138,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_QA_AEROSOL_CU_doy2018173_aid0001.tif'},\n  {'sha256': 'b1a6cbecea141a5c8427efd75c5d96742167e1944bd22ad51f7f194c2ecc40f9',\n   'file_id': '329b0c77-9e00-4073-911a-40597a7b60bd',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_QA_AEROSOL_CU_doy2018182_aid0001.tif',\n   'file_size': 176822,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_QA_AEROSOL_CU_doy2018182_aid0001.tif'},\n  {'sha256': 'fac9a3a0fb6909d48881f08712e2dabe6b26780a9d0c9c86a63433ff445288d8',\n   'file_id': 'a69593e8-a42e-4062-98a7-a0c5b622ffa2',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_QA_AEROSOL_CU_doy2018189_aid0001.tif',\n   'file_size': 109628,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_QA_AEROSOL_CU_doy2018189_aid0001.tif'},\n  {'sha256': 'a7957b80c774c39888103acf6a3e59d6e1d311971da3cbd1aea6fe2e366f927c',\n   'file_id': '6c01c577-547b-4e04-8317-cff246aa41f1',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_QA_AEROSOL_CU_doy2018198_aid0001.tif',\n   'file_size': 250103,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_QA_AEROSOL_CU_doy2018198_aid0001.tif'},\n  {'sha256': '24c2ac65ee1cba639c12c921281221504bdc0c5718ce6f9882a40e04c4057d7e',\n   'file_id': '5996f0ce-6609-43aa-9d08-c43a1cb7adcc',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_QA_AEROSOL_CU_doy2018205_aid0001.tif',\n   'file_size': 63277,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_QA_AEROSOL_CU_doy2018205_aid0001.tif'},\n  {'sha256': '4701b2b73344ad6148e0354032d407bc2f99e8b9196b2bba1c5dce91d4c4d892',\n   'file_id': '9a363ef1-95b9-4796-97f8-08f088a243b1',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_QA_AEROSOL_CU_doy2018214_aid0001.tif',\n   'file_size': 316808,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_QA_AEROSOL_CU_doy2018214_aid0001.tif'},\n  {'sha256': '0ece9e7d805006ee94f6d07482d4d7086719d6a3c5223264c61472c0bf47a660',\n   'file_id': '0f263557-5f07-468f-9935-74fd29fc31c9',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_QA_AEROSOL_CU_doy2018221_aid0001.tif',\n   'file_size': 224411,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_QA_AEROSOL_CU_doy2018221_aid0001.tif'},\n  {'sha256': '15f49495006d425002a9e702ba692cdecaa656d864fa4dbf0650a0ca3aa5593e',\n   'file_id': '52b6a8d5-9cac-4b9c-bcb1-e0d35bf815fa',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_QA_AEROSOL_CU_doy2018230_aid0001.tif',\n   'file_size': 221024,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_QA_AEROSOL_CU_doy2018230_aid0001.tif'},\n  {'sha256': '03c49e425c88aa173c892f920741952efc1bed8cd3bc23f36fd428ded4422cab',\n   'file_id': '8bebdd36-0cc6-47d4-b590-d0860a3652bb',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_QA_AEROSOL_CU_doy2018237_aid0001.tif',\n   'file_size': 175511,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_QA_AEROSOL_CU_doy2018237_aid0001.tif'},\n  {'sha256': '48f6f947be5a6868e0e5e03388253d5e7182ce070111a92e33c116e126b35f73',\n   'file_id': '37d8d549-5d4a-4fb2-8e52-8eda44196ff9',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_QA_AEROSOL_CU_doy2018246_aid0001.tif',\n   'file_size': 289283,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_QA_AEROSOL_CU_doy2018246_aid0001.tif'},\n  {'sha256': '9ace00536eede4417b61d1d3f958aecbc2d190062d71c8b9ee974bc40dd074d5',\n   'file_id': 'ecb0b52b-63b6-46ab-8c2c-24aaae49a43d',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_QA_AEROSOL_CU_doy2018253_aid0001.tif',\n   'file_size': 56362,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_QA_AEROSOL_CU_doy2018253_aid0001.tif'},\n  {'sha256': 'c0205b98d3ea5446a896c8123218df2cf80c6fdf011a9c538dea262107e357ab',\n   'file_id': '2601787f-142a-4e11-b986-556aa6613954',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_QA_AEROSOL_CU_doy2018262_aid0001.tif',\n   'file_size': 203431,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_QA_AEROSOL_CU_doy2018262_aid0001.tif'},\n  {'sha256': '7bd1c97bf1953a68b10b1213fb32c8a70c3106044350020efb234b27928a91fb',\n   'file_id': '5ad2199b-9607-4582-83e5-5b0503563093',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_QA_AEROSOL_CU_doy2018269_aid0001.tif',\n   'file_size': 188318,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_QA_AEROSOL_CU_doy2018269_aid0001.tif'},\n  {'sha256': 'db3dd17b3bd1eee45c2ce1571269a42078c15e80918a96357e624b61e84ae162',\n   'file_id': '00b1f48f-75da-4c66-96c5-481405336efa',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_RADSAT_CU_doy2018157_aid0001.tif',\n   'file_size': 60147,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_RADSAT_CU_doy2018157_aid0001.tif'},\n  {'sha256': '4af7c38ef1238ebddd9ae9b16a0f8c416160c7507dcab0ee7ca0d4dfe7469a3d',\n   'file_id': '19e4d8fa-3e44-4ae1-b5db-429d6099ad2b',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_RADSAT_CU_doy2018166_aid0001.tif',\n   'file_size': 60141,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_RADSAT_CU_doy2018166_aid0001.tif'},\n  {'sha256': '4af7c38ef1238ebddd9ae9b16a0f8c416160c7507dcab0ee7ca0d4dfe7469a3d',\n   'file_id': 'b7411089-6ecb-43ce-8ef8-cc86e0415d72',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_RADSAT_CU_doy2018173_aid0001.tif',\n   'file_size': 60141,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_RADSAT_CU_doy2018173_aid0001.tif'},\n  {'sha256': '4af7c38ef1238ebddd9ae9b16a0f8c416160c7507dcab0ee7ca0d4dfe7469a3d',\n   'file_id': '675607f3-0e82-4bc3-af8e-ff5628bcd4d8',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_RADSAT_CU_doy2018182_aid0001.tif',\n   'file_size': 60141,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_RADSAT_CU_doy2018182_aid0001.tif'},\n  {'sha256': '4513e96e29644ff1e96a83aa99524503cc5be2aea759e993e699c9e032ed85f7',\n   'file_id': 'b228c68e-7548-4061-973d-5a6ebc45723c',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_RADSAT_CU_doy2018189_aid0001.tif',\n   'file_size': 60145,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_RADSAT_CU_doy2018189_aid0001.tif'},\n  {'sha256': '4af7c38ef1238ebddd9ae9b16a0f8c416160c7507dcab0ee7ca0d4dfe7469a3d',\n   'file_id': 'e29cd50e-4894-4092-9640-279754463622',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_RADSAT_CU_doy2018198_aid0001.tif',\n   'file_size': 60141,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_RADSAT_CU_doy2018198_aid0001.tif'},\n  {'sha256': '4af7c38ef1238ebddd9ae9b16a0f8c416160c7507dcab0ee7ca0d4dfe7469a3d',\n   'file_id': '8667f438-ac28-4292-a2d6-5a5268513fdc',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_RADSAT_CU_doy2018205_aid0001.tif',\n   'file_size': 60141,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_RADSAT_CU_doy2018205_aid0001.tif'},\n  {'sha256': 'f32032cdec0bd67ada22fe0355f804aa4ce01fff8adccdfc44190ed7a0e2b9bd',\n   'file_id': 'a68ca891-8ea2-4c0c-9b05-689b0c64150b',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_RADSAT_CU_doy2018214_aid0001.tif',\n   'file_size': 60762,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_RADSAT_CU_doy2018214_aid0001.tif'},\n  {'sha256': 'bb6483672986c259f6cab1ed600e6eee1bfbdcbec6225c5ae8b0e26d208212cf',\n   'file_id': '2e0ad941-3f63-4c3c-b422-ca06b9b29fc9',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_RADSAT_CU_doy2018221_aid0001.tif',\n   'file_size': 60155,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_RADSAT_CU_doy2018221_aid0001.tif'},\n  {'sha256': '4af7c38ef1238ebddd9ae9b16a0f8c416160c7507dcab0ee7ca0d4dfe7469a3d',\n   'file_id': '34d07fdd-8f1b-4034-9bd5-e1bf4ec3eb07',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_RADSAT_CU_doy2018230_aid0001.tif',\n   'file_size': 60141,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_RADSAT_CU_doy2018230_aid0001.tif'},\n  {'sha256': '4af7c38ef1238ebddd9ae9b16a0f8c416160c7507dcab0ee7ca0d4dfe7469a3d',\n   'file_id': 'b2d229a2-f47e-4801-8735-8b45580ff685',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_RADSAT_CU_doy2018237_aid0001.tif',\n   'file_size': 60141,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_RADSAT_CU_doy2018237_aid0001.tif'},\n  {'sha256': '4af7c38ef1238ebddd9ae9b16a0f8c416160c7507dcab0ee7ca0d4dfe7469a3d',\n   'file_id': '79edf650-55d7-4e8a-a448-118e475328dd',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_RADSAT_CU_doy2018246_aid0001.tif',\n   'file_size': 60141,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_RADSAT_CU_doy2018246_aid0001.tif'},\n  {'sha256': '4af7c38ef1238ebddd9ae9b16a0f8c416160c7507dcab0ee7ca0d4dfe7469a3d',\n   'file_id': 'be759ab1-15a3-4cb1-863f-a309d7613c0a',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_RADSAT_CU_doy2018253_aid0001.tif',\n   'file_size': 60141,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_RADSAT_CU_doy2018253_aid0001.tif'},\n  {'sha256': '36ec9b49bbbfeadd74084a700784b5eb0f71cd275b63eb2d21f48607fde165f7',\n   'file_id': '13ee46d4-cf0a-46d8-beb1-3c0ad1d938e1',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_RADSAT_CU_doy2018262_aid0001.tif',\n   'file_size': 60142,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_RADSAT_CU_doy2018262_aid0001.tif'},\n  {'sha256': '4af7c38ef1238ebddd9ae9b16a0f8c416160c7507dcab0ee7ca0d4dfe7469a3d',\n   'file_id': '14db9754-67d2-435c-aa94-3e803539f8cf',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_RADSAT_CU_doy2018269_aid0001.tif',\n   'file_size': 60141,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_RADSAT_CU_doy2018269_aid0001.tif'},\n  {'sha256': 'f657fe4dc65e76f50c15698c225d6c2015168fee80d34d5225054feee9b8ff5c',\n   'file_id': '0261ae18-1a06-4bd1-9eb4-a296b7741223',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_B5_CU_doy2018157_aid0001.tif',\n   'file_size': 4697291,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_B5_CU_doy2018157_aid0001.tif'},\n  {'sha256': '402dc763601ca5e181fac4eef74d64d7326b8773bad67f2279519b8b09c45df0',\n   'file_id': 'c6305ab3-edef-422b-acdf-22cac007b979',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_B5_CU_doy2018166_aid0001.tif',\n   'file_size': 4189149,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_B5_CU_doy2018166_aid0001.tif'},\n  {'sha256': 'bcb537bee6fac01877d52ea1ef3dce2b1ace5c31725cbb820003601b2c054633',\n   'file_id': '4b2c2cfe-8019-4f92-8a85-706010fbd0dd',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_B5_CU_doy2018173_aid0001.tif',\n   'file_size': 4649799,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_B5_CU_doy2018173_aid0001.tif'},\n  {'sha256': '078d1f04e9c636ab4ec77cebaaadb43c03ec6128169b517521262735e849f96f',\n   'file_id': 'e871c4a9-8ac3-4f4f-951b-e6c8cdd5256f',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_B5_CU_doy2018182_aid0001.tif',\n   'file_size': 4107878,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_B5_CU_doy2018182_aid0001.tif'},\n  {'sha256': 'eb59a2d150801cb28c8b48f897774d2fa86b01f63e5788002c8f96948e3c472c',\n   'file_id': 'add95543-9fe9-4d94-b1b0-13e185d6aaaf',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_B5_CU_doy2018189_aid0001.tif',\n   'file_size': 4343192,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_B5_CU_doy2018189_aid0001.tif'},\n  {'sha256': '3826fe3dbc3989add5851210c5be4b531c4ddbd27851a76f992232073b3e3f8e',\n   'file_id': 'bb75c7e2-03ea-4111-89f2-a69777510550',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_B5_CU_doy2018198_aid0001.tif',\n   'file_size': 4547878,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_B5_CU_doy2018198_aid0001.tif'},\n  {'sha256': 'ac5ae5d51629d856bf716306535e1e03280ca9eed332c21c8f224ca97ff33081',\n   'file_id': '23a694fc-ca87-45e4-8596-253d05748a70',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_B5_CU_doy2018205_aid0001.tif',\n   'file_size': 4239075,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_B5_CU_doy2018205_aid0001.tif'},\n  {'sha256': '1de2c3e9dcc397c1e21e2959e4eb5e2a3e13bad171e4d46bea3311dd8acc65d1',\n   'file_id': 'da36526a-b5af-45c4-9299-812e1abb6a6f',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_B5_CU_doy2018214_aid0001.tif',\n   'file_size': 4666502,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_B5_CU_doy2018214_aid0001.tif'},\n  {'sha256': 'c04dbfb1b494f12f9e0c205cef73e6124945c9aa7eb07a319224519bddc26412',\n   'file_id': '52d02530-01c0-4008-be17-87c0c7a459f9',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_B5_CU_doy2018221_aid0001.tif',\n   'file_size': 4419285,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_B5_CU_doy2018221_aid0001.tif'},\n  {'sha256': '18d48d2822f9ed19b04edef2c58e476f04268c776b284e587a9ef2bbbb25d1fc',\n   'file_id': '4bbccec3-5782-4d8c-bf79-c21b0956e929',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_B5_CU_doy2018230_aid0001.tif',\n   'file_size': 4832186,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_B5_CU_doy2018230_aid0001.tif'},\n  {'sha256': 'fbc3c6f12573025cee1ce9853e8206e66f58d5be4cd5da5cffe817b7a321c380',\n   'file_id': '779b2387-94c0-44fa-943c-41c9080ea65c',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_B5_CU_doy2018237_aid0001.tif',\n   'file_size': 4844275,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_B5_CU_doy2018237_aid0001.tif'},\n  {'sha256': '700e6fab752bb1674c8f52c7e3833abbf38ab11c6fd29928e1c7158030e60e7f',\n   'file_id': '2958cbb9-e088-4c47-b081-c63fe5693e08',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_B5_CU_doy2018246_aid0001.tif',\n   'file_size': 4106203,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_B5_CU_doy2018246_aid0001.tif'},\n  {'sha256': '2e8b3ca86a1089a0a120cc45137774a17a29181829fcb1cedf7dda918fdc8ffb',\n   'file_id': '4f6d7d76-3dc4-4896-9b61-7ca947464eac',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_B5_CU_doy2018253_aid0001.tif',\n   'file_size': 4692602,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_B5_CU_doy2018253_aid0001.tif'},\n  {'sha256': 'fabd21e8d6f00789a42b0aaf5cd80c6568666833a79fdbb1b826068ab8b33870',\n   'file_id': '188c7fb8-10e7-49d4-827c-0aa2b64b8857',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_B5_CU_doy2018262_aid0001.tif',\n   'file_size': 4235859,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_B5_CU_doy2018262_aid0001.tif'},\n  {'sha256': 'a4d8b65096a86ee225ea2c176d29fce81a5427517e3ec9d7d2e9bbc807a25aab',\n   'file_id': '2234823e-2e4c-4256-9931-b42f45bdf5e6',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_SR_B5_CU_doy2018269_aid0001.tif',\n   'file_size': 4140068,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_SR_B5_CU_doy2018269_aid0001.tif'},\n  {'sha256': '7183c85ac59622dbd8d0958a44318c0663a1da31288565a37661ce818e63ff94',\n   'file_id': '16c43661-9690-49f8-8e87-30ae260c600d',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_LINEAGE_CU_doy2018157_aid0001.tif',\n   'file_size': 38872,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_LINEAGE_CU_doy2018157_aid0001.tif'},\n  {'sha256': '7183c85ac59622dbd8d0958a44318c0663a1da31288565a37661ce818e63ff94',\n   'file_id': '77b42a9f-13d3-400c-aa59-6a3b823988d2',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_LINEAGE_CU_doy2018166_aid0001.tif',\n   'file_size': 38872,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_LINEAGE_CU_doy2018166_aid0001.tif'},\n  {'sha256': '7183c85ac59622dbd8d0958a44318c0663a1da31288565a37661ce818e63ff94',\n   'file_id': '73c32204-8e44-482d-a58e-4266ab74dce3',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_LINEAGE_CU_doy2018173_aid0001.tif',\n   'file_size': 38872,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_LINEAGE_CU_doy2018173_aid0001.tif'},\n  {'sha256': '7183c85ac59622dbd8d0958a44318c0663a1da31288565a37661ce818e63ff94',\n   'file_id': '668bf5fd-dee8-4c94-adec-55576af5a1ab',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_LINEAGE_CU_doy2018182_aid0001.tif',\n   'file_size': 38872,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_LINEAGE_CU_doy2018182_aid0001.tif'},\n  {'sha256': '7183c85ac59622dbd8d0958a44318c0663a1da31288565a37661ce818e63ff94',\n   'file_id': '9b7646b8-a189-458c-ac31-c694850757fb',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_LINEAGE_CU_doy2018189_aid0001.tif',\n   'file_size': 38872,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_LINEAGE_CU_doy2018189_aid0001.tif'},\n  {'sha256': '7183c85ac59622dbd8d0958a44318c0663a1da31288565a37661ce818e63ff94',\n   'file_id': '8dd36ad9-1117-4d49-ae69-5a4429e536f1',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_LINEAGE_CU_doy2018198_aid0001.tif',\n   'file_size': 38872,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_LINEAGE_CU_doy2018198_aid0001.tif'},\n  {'sha256': '7183c85ac59622dbd8d0958a44318c0663a1da31288565a37661ce818e63ff94',\n   'file_id': '9ae86431-375f-45af-a4eb-c62995b549c6',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_LINEAGE_CU_doy2018205_aid0001.tif',\n   'file_size': 38872,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_LINEAGE_CU_doy2018205_aid0001.tif'},\n  {'sha256': '7183c85ac59622dbd8d0958a44318c0663a1da31288565a37661ce818e63ff94',\n   'file_id': 'ccedefdb-886a-4ea7-930c-73b413a3be49',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_LINEAGE_CU_doy2018214_aid0001.tif',\n   'file_size': 38872,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_LINEAGE_CU_doy2018214_aid0001.tif'},\n  {'sha256': '7183c85ac59622dbd8d0958a44318c0663a1da31288565a37661ce818e63ff94',\n   'file_id': 'a2d803de-5b7f-478b-a03b-489c00d2ecf7',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_LINEAGE_CU_doy2018221_aid0001.tif',\n   'file_size': 38872,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_LINEAGE_CU_doy2018221_aid0001.tif'},\n  {'sha256': '7183c85ac59622dbd8d0958a44318c0663a1da31288565a37661ce818e63ff94',\n   'file_id': 'b944c5c1-6bc3-4a9d-8533-ed907cb906fe',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_LINEAGE_CU_doy2018230_aid0001.tif',\n   'file_size': 38872,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_LINEAGE_CU_doy2018230_aid0001.tif'},\n  {'sha256': '7183c85ac59622dbd8d0958a44318c0663a1da31288565a37661ce818e63ff94',\n   'file_id': '095c3fb5-a5b0-4d61-b7c0-37048d6b1fbc',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_LINEAGE_CU_doy2018237_aid0001.tif',\n   'file_size': 38872,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_LINEAGE_CU_doy2018237_aid0001.tif'},\n  {'sha256': '7183c85ac59622dbd8d0958a44318c0663a1da31288565a37661ce818e63ff94',\n   'file_id': '686a47a8-9c8f-4016-aa28-393210648e78',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_LINEAGE_CU_doy2018246_aid0001.tif',\n   'file_size': 38872,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_LINEAGE_CU_doy2018246_aid0001.tif'},\n  {'sha256': '7183c85ac59622dbd8d0958a44318c0663a1da31288565a37661ce818e63ff94',\n   'file_id': 'c252ce99-f228-428d-b07b-aefaea990366',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_LINEAGE_CU_doy2018253_aid0001.tif',\n   'file_size': 38872,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_LINEAGE_CU_doy2018253_aid0001.tif'},\n  {'sha256': '7183c85ac59622dbd8d0958a44318c0663a1da31288565a37661ce818e63ff94',\n   'file_id': '142e091d-6b43-42c3-9797-8d5f6a6009ae',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_LINEAGE_CU_doy2018262_aid0001.tif',\n   'file_size': 38872,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_LINEAGE_CU_doy2018262_aid0001.tif'},\n  {'sha256': '7183c85ac59622dbd8d0958a44318c0663a1da31288565a37661ce818e63ff94',\n   'file_id': 'f87351f3-f426-458d-a99a-c1ff9b63c069',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_LINEAGE_CU_doy2018269_aid0001.tif',\n   'file_size': 38872,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_LINEAGE_CU_doy2018269_aid0001.tif'},\n  {'sha256': '24d3fb2db0a08dcd3e2463e61b50cd9f0b5132d2eb458e71d642b27e95997d27',\n   'file_id': 'c59a115a-a69c-458a-a8e0-9c9172b2a836',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_PIXEL_CU_doy2018157_aid0001.tif',\n   'file_size': 309671,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_PIXEL_CU_doy2018157_aid0001.tif'},\n  {'sha256': '70c2cf9bb20a7560fd50ee6a79e8ee97d108c390aeadd9d31c5ffa7ed32f6970',\n   'file_id': 'f9db2b17-41ad-42b7-a92a-0a28859fe3c7',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_PIXEL_CU_doy2018166_aid0001.tif',\n   'file_size': 120071,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_PIXEL_CU_doy2018166_aid0001.tif'},\n  {'sha256': '21f00a831574d1404fe8990bbb63583b21a3717c5d522ceebdf000e84b9fac47',\n   'file_id': '055c634c-b20f-4bdc-a496-4c46719d000c',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_PIXEL_CU_doy2018173_aid0001.tif',\n   'file_size': 199737,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_PIXEL_CU_doy2018173_aid0001.tif'},\n  {'sha256': '38916f4e7399969c88967e42e25150c3af612e067ea5174012c4dffe368cd541',\n   'file_id': '93a39aeb-8beb-4d51-8817-2a128aa808ea',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_PIXEL_CU_doy2018182_aid0001.tif',\n   'file_size': 121560,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_PIXEL_CU_doy2018182_aid0001.tif'},\n  {'sha256': 'fa9336a18832282738a501a8eab7b5c27606825d80b6ee34b8c91fe7333e68a6',\n   'file_id': '0cc3bdcb-0230-483c-aedf-4d6871a59b47',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_PIXEL_CU_doy2018189_aid0001.tif',\n   'file_size': 122607,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_PIXEL_CU_doy2018189_aid0001.tif'},\n  {'sha256': '7dd6157238a8865086a752c10a2540befcb7c707997c4b008ef5a6d7501fc15b',\n   'file_id': '6d12b7e1-33f0-4557-b49e-41789dae0b5a',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_PIXEL_CU_doy2018198_aid0001.tif',\n   'file_size': 204448,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_PIXEL_CU_doy2018198_aid0001.tif'},\n  {'sha256': '6588efc50164ee3e73f5d5a87615825aed32c8f104e7c8608a8cb421e1f24d78',\n   'file_id': '0230ed1b-45f8-4b5d-8174-328cf2131c25',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_PIXEL_CU_doy2018205_aid0001.tif',\n   'file_size': 139991,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_PIXEL_CU_doy2018205_aid0001.tif'},\n  {'sha256': '90c0f97017f2181a16795676a39da05257b4356d886c28fd6b8db83017a89cdb',\n   'file_id': '4b659bec-2557-47fe-adcf-73b72b305dc0',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_PIXEL_CU_doy2018214_aid0001.tif',\n   'file_size': 334000,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_PIXEL_CU_doy2018214_aid0001.tif'},\n  {'sha256': 'b90d858fe61f05b149efc0ce52ab942a726e1a97b16d99beb095fbac8c321726',\n   'file_id': '573f9812-c496-4097-980a-fa9e4c6ce920',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_PIXEL_CU_doy2018221_aid0001.tif',\n   'file_size': 246250,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_PIXEL_CU_doy2018221_aid0001.tif'},\n  {'sha256': 'f75f3fed591a09133687750c8149b7d29ef4e6e15baa560b76d262cf7f9f2f61',\n   'file_id': '313911e6-c512-4d04-b480-d2aa1ca30145',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_PIXEL_CU_doy2018230_aid0001.tif',\n   'file_size': 171440,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_PIXEL_CU_doy2018230_aid0001.tif'},\n  {'sha256': '9dc3c5be3cf72b32b3420324c5c251eae025af8d44141dd39fbd1e37033e8d93',\n   'file_id': '9af369d2-e652-40ae-be3d-36abf8104c18',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_PIXEL_CU_doy2018237_aid0001.tif',\n   'file_size': 204891,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_PIXEL_CU_doy2018237_aid0001.tif'},\n  {'sha256': '11552df0c265e3a26eb10193902d629369061b56e25f063767df98725551b5b7',\n   'file_id': 'c14382a5-9307-4cae-bba0-76aa8f1b56e1',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_PIXEL_CU_doy2018246_aid0001.tif',\n   'file_size': 226971,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_PIXEL_CU_doy2018246_aid0001.tif'},\n  {'sha256': '0b728e6be301ba49affce673ae23622e57dcc5a930eb3ed8e40bdbcf08fb814b',\n   'file_id': 'af1b857c-4bed-4e5d-bcdf-997a2915f183',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_PIXEL_CU_doy2018253_aid0001.tif',\n   'file_size': 132798,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_PIXEL_CU_doy2018253_aid0001.tif'},\n  {'sha256': 'afed8e7c2210ae56bcf177a12f2b0e9ae2dee8fbe65d13c5c027129c873ca329',\n   'file_id': 'a9c6f0bd-e8d8-4961-b87a-a14a332c4016',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_PIXEL_CU_doy2018262_aid0001.tif',\n   'file_size': 127148,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_PIXEL_CU_doy2018262_aid0001.tif'},\n  {'sha256': '80378129504b3da632ab6b942ba106ac364dabf2753f75c9a46addc2622d6520',\n   'file_id': '465d3c39-2e1d-472b-aa80-3e82d1ec9af3',\n   'file_name': 'L08.002_2018137_to_2018273/L08.002_QA_PIXEL_CU_doy2018269_aid0001.tif',\n   'file_size': 163425,\n   'file_type': 'tif',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08.002_2018137_to_2018273/L08.002_QA_PIXEL_CU_doy2018269_aid0001.tif'},\n  {'sha256': 'badc041c6f4e9ff2b8c66f5df24350b7c789f3a4d61b51341163da6477be8a05',\n   'file_id': '75d0cbfa-ecfc-4a83-b28a-fc2b41f45ef5',\n   'file_name': 'L08-002-SR-QA-AEROSOL-CU-lookup.csv',\n   'file_size': 1670,\n   'file_type': 'csv',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08-002-SR-QA-AEROSOL-CU-lookup.csv'},\n  {'sha256': '42975e156330815c979e1229cc8cafadd9ea95850296081114b14e57d7821a64',\n   'file_id': '48b052d6-2ab5-4037-a073-814684438175',\n   'file_name': 'L08-002-QA-RADSAT-CU-lookup.csv',\n   'file_size': 755,\n   'file_type': 'csv',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08-002-QA-RADSAT-CU-lookup.csv'},\n  {'sha256': '44a9da27fc2e12ec055161a7008ec8be8c287ff40e19ff5c5f6feda2e5bc55a2',\n   'file_id': '96f14492-5f5b-4f3a-aa47-8ec28efcb666',\n   'file_name': 'L08-002-QA-LINEAGE-CU-lookup.csv',\n   'file_size': 42,\n   'file_type': 'csv',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08-002-QA-LINEAGE-CU-lookup.csv'},\n  {'sha256': '6a2d1509ac0eb1d491d9f97313ff108cc8108508b1a8a005d54902caf3c3e0ab',\n   'file_id': '43f43072-b524-4ca0-a2b3-7f31c6d3bd4b',\n   'file_name': 'L08-002-QA-PIXEL-CU-lookup.csv',\n   'file_size': 9238,\n   'file_type': 'csv',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08-002-QA-PIXEL-CU-lookup.csv'},\n  {'sha256': '0ee52de0533b08e052ff41f4766eb5d1785f16573350c47d2e198d4fedc7dd6e',\n   'file_id': 'abdacdf4-ea16-42f8-9722-d1da301254e6',\n   'file_name': 'L08-002-SR-QA-AEROSOL-CU-Statistics-QA.csv',\n   'file_size': 2202,\n   'file_type': 'csv',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08-002-SR-QA-AEROSOL-CU-Statistics-QA.csv'},\n  {'sha256': '930bb24267ec1f3c77841939a78e64ec9a939f555c830b3687deb72c7e886273',\n   'file_id': '8e58639e-e5b9-4a12-9997-f5bc465079ae',\n   'file_name': 'L08-002-QA-RADSAT-CU-Statistics-QA.csv',\n   'file_size': 887,\n   'file_type': 'csv',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08-002-QA-RADSAT-CU-Statistics-QA.csv'},\n  {'sha256': 'cbedcd08ffcdd0a10e60cfbbde775405ca49d812e01f985af18e86d9b87c0790',\n   'file_id': '93f728b1-692a-4a96-bbf4-b146e0b010cf',\n   'file_name': 'L08-002-QA-LINEAGE-CU-Statistics-QA.csv',\n   'file_size': 826,\n   'file_type': 'csv',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08-002-QA-LINEAGE-CU-Statistics-QA.csv'},\n  {'sha256': 'f4fc91d61dc338187268cc5ca14ba10ef737bbfdd316f1f3c8e678a0cd2467e8',\n   'file_id': 'cb5022d7-183c-4b38-954c-eafb39104ffd',\n   'file_name': 'L08-002-QA-PIXEL-CU-Statistics-QA.csv',\n   'file_size': 2634,\n   'file_type': 'csv',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08-002-QA-PIXEL-CU-Statistics-QA.csv'},\n  {'sha256': '67f57531f7b943291a334b6106f24f671b74bd59c279e0674f966df38928cb01',\n   'file_id': 'db72ddeb-822a-4ceb-9ae5-05f54ebb985a',\n   'file_name': 'L08-002-Statistics.csv',\n   'file_size': 5673,\n   'file_type': 'csv',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/L08-002-Statistics.csv'},\n  {'sha256': 'e9c4a40e839ac0280d0ea8e1ecc3a5f20c20a497afd52e5f072a4bb41dff8918',\n   'file_id': 'f1112eba-c98e-4975-b6d1-ef0f374b6dd7',\n   'file_name': 'Talbot-County-granule-list.txt',\n   'file_size': 14160,\n   'file_type': 'txt',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/Talbot-County-granule-list.txt'},\n  {'sha256': '1cb0ded677a9a9f947c3db0e32c4c35015905f65074072822e30d51fc4f2ded7',\n   'file_id': 'e11d51fe-740b-4633-8d3e-ed7bbcc3b89d',\n   'file_name': 'Talbot-County-request.json',\n   'file_size': 61734,\n   'file_type': 'json',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/Talbot-County-request.json'},\n  {'sha256': '5ee1621f970ccca1a8ccd3f401fd9ff647a1b0cf7ac89748fb4589f6e05e05e7',\n   'file_id': '47144630-27a1-4f6c-a8d7-22606d08b8cf',\n   'file_name': 'Talbot-County-L08-002-metadata.xml',\n   'file_size': 21769,\n   'file_type': 'xml',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/Talbot-County-L08-002-metadata.xml'},\n  {'sha256': '43a4092efcfac3cb297ad2063de5849be6f7869b24605e6fa7e064335cdaa5d0',\n   'file_id': 'f238f3d0-5315-4573-82ef-245ef60d489d',\n   'file_name': 'README.md',\n   'file_size': 37481,\n   'file_type': 'txt',\n   's3_url': 's3://appeears-output/0bf195aa-7544-4a53-83c9-793e36cf821d/README.md'}],\n 'created': '2025-02-03T23:02:56.208443',\n 'task_id': '0bf195aa-7544-4a53-83c9-793e36cf821d',\n 'updated': '2025-02-03T23:06:38.236079',\n 'bundle_type': 'area'}\n\n\n\nfor file in bundle['files']: # loops through each Landsat tile that we called.\n    file_id = file['file_id'] # store the name of the tile\n    if '_doy' in file['file_name']: # doy is the day of the year, ordering the dictionary by doy allows for easier access later\n      # This allows us to get just the files of interest. We only want the\n      if \"SR_B4\" in file['file_name'] or \"SR_B5\" in file['file_name'] or \"QA_PIXEL_C\" in file['file_name']:\n          datesy = file['file_name'].split('_doy')[1][:7] # seperation of doy values\n          doy = doy_2_date(datesy) # calling the function (from Julian day (001 is the first day of the year, 365 is the last day of the year) to mm-dd-yyyy\n          band = file['file_name'].split('/L08.002_')[1][:5]\n      else:\n          continue\n      # access the NDVI data via request library\n      file_download = requests.get(\n          'https://appeears.earthdatacloud.nasa.gov/api/bundle/{0}/{1}'.format(task_id['task_id'], file_id),\n          headers={'Authorization': 'Bearer {0}'.format(token)},\n          allow_redirects=True,\n          stream=True)\n      # Get the status of the file\n      file_download.raise_for_status()\n      # This error warning allows for continuation even if there is an error\n      if not file_download.content:\n          print(f\"Warning: Empty file downloaded for {file['file_name']}\") # print warning message if there is an error, continue to next data set otherwise\n          continue\n      file_content = BytesIO(file_download.content) # format the downloaded content\n      with rasterio.open(file_content) as src_initial: # open the accessed raster\n          src = src_initial.read(1, masked=True) # read in the layer data\n          src_meta = src_initial.meta # access the metadata\n          dst_crs = 'EPSG:4326' # define the crs\n          transform, width, height = calculate_default_transform(\n              src_meta['crs'], dst_crs, src.shape[1], src.shape[0], *src_initial.bounds)\n          kwargs = src_meta.copy()\n          # collect the current meta data information\n          kwargs.update({\n              'crs': dst_crs,\n              'transform': transform,\n              'width': width,\n              'height': height\n          })\n\n          dst = np.zeros((height, width), dtype=src_meta['dtype'])\n          # Begin the reprojection process based on earlier defined projections of interest\n          reproject(\n              source=src,\n              destination=dst,\n              src_transform=src_meta['transform'],\n              src_crs=src_meta['crs'],\n              dst_transform=transform,\n              dst_crs=dst_crs,\n              resampling=Resampling.nearest)\n\n          # update the data (if no data set to 0)\n          kwargs.update({'nodata': 0})\n          # name the data\n          key = f'{band}'\n          if key not in data:\n              # if first dataset, append the metadata to the entire dictionary\n              data[key] = {'data': [], 'meta': kwargs, 'doy': []}\n          # stack the data and data\n          data[key]['data'].append(dst)\n          data[key]['doy'].append(doy)\n\n    else:\n      continue\n\n# name the stacked data, day, and metadata to be referenced later\nnir = np.stack(data['SR_B5']['data']) / 100\nred = np.stack(data['SR_B4']['data']) / 100\nqa_flags = np.stack(data['QA_PI']['data'])\nday = np.stack(data['SR_B5']['doy'])\nmeta_nir = data['SR_B5']['meta']\nmeta_red = data['SR_B4']['meta']\n\nndvi = np.where((nir + red) != 0, (nir - red) / (nir + red), 0)\n\nNow that we have an NDVI dataset for each date, we have to filter out the cloudy or otherwise poor-quality NDVI values.\n\n\nqa_flags_to_mask = [21824, 21890, 21952, 22018, 22146, 22208] ## These are the values that indicate the higher quality of pixel\nmasked_ndvi = np.where(np.isin(qa_flags, qa_flags_to_mask), np.nan, ndvi) # filter the NDVI array\n\n\n## This function resamples the data to the same\n# Because the NDVI is 30 by 30-meters, the CDL data is at 30 by 30-meter resolution, and the SLR is less than 10 by 10-meter resolution\n# Resampling to the same spatial scale allows for analysis on the same spatial scale\ndef resample_data(data, data_meta, to_reproject, method):\n    # collect the metadata from the CDL dataset\n    resampled_data = np.zeros(\n        (data.shape[0], to_reproject['height'], to_reproject['width']),\n        dtype=data.dtype\n    )\n    # collect the metadata from the target dataset\n    for i in range(data.shape[0]): # Because the NDVI stack has multiple dates, we have to loop through the stacked data\n        reproject(\n            source=data[i],\n            destination=resampled_data[i],\n            src_transform=data_meta['transform'],\n            src_crs=data_meta['crs'],\n            dst_transform=to_reproject['transform'],\n            dst_crs=to_reproject['crs'],\n            resampling=method # method of resampling - either nearest neightbor or bilinear (average of 4 closest neighbors)\n        )\n    # update the target dataset to the CDL dataset height and width\n    updated_meta = data_meta.copy()\n    updated_meta.update({\n        'transform': to_reproject['transform'],\n        'width': to_reproject['width'],\n        'height': to_reproject['height'],\n        'crs': to_reproject['crs']\n    })\n\n    return resampled_data, updated_meta\n\ncdl_resampled, cdl_resampled_meta = resample_data(cdl_reprojected, cdl_meta_reprojected, meta_red, Resampling.nearest)\nslr_resampled, slr_resampled_meta = resample_data(slr_reprojected, slr_meta_reprojected, meta_red, Resampling.bilinear)\n\n# print out the dataset shapes to see how the transformation has changed the resolution of the data\nprint(\"NDVI shape:\", ndvi.shape)\n\nprint(\"Original CDL shape:\", cdl_reprojected.shape)\nprint('Resampled CDL:', cdl_resampled.shape)\n\nprint(\"Original SLR shape:\", slr_reprojected.shape)\nprint(\"Resampled SLR shape:\", slr_resampled.shape)\n\nNDVI shape: (15, 1681, 2153)\nOriginal CDL shape: (1, 1681, 2153)\nResampled CDL: (1, 1681, 2153)\nOriginal SLR shape: (1, 44790, 28460)\nResampled SLR shape: (1, 1681, 2153)\n\n\nThis code places both rasters on the same map. We first select only corn (where the CDL value is equal to 1). Look on the CDL website if you are interested in other land classes.\n\ncorn_mask = cdl_resampled[0,:,:] == 1 # Sets the CDL to only values of 1, which is representative of corn\nSLR_MASK = slr_resampled[0,:,:] <= 10  # values that will be underwater\n\n\n\nfig, ax = plt.subplots(figsize=(15, 5))\n\nax.imshow(corn_mask, cmap='Greens', alpha=0.5)\nax.imshow(SLR_MASK, cmap='Blues', alpha=0.5)\n\nplt.tight_layout()\nplt.show()\n\n# Calculate the area of overlap between the corn and water masks.\noverlap_mask = np.logical_and(corn_mask, SLR_MASK)\n\n# Get the resolution of the raster data (assuming both are the same)\nresolution = meta_red['transform'][0]  # Assuming the transform is consistent across all rasters\n# Calculate the area of each pixel in acres (1 acre = 43560 sq ft)\npixel_area_acres = (30 * 3.28084)**2 / 43560 # convert from 30 meters to acres\n\n# Calculate the total impacted area\nimpacted_acres = np.sum(overlap_mask) * pixel_area_acres\n\nprint(f\"Acres impacted by flooding in corn fields: {impacted_acres:.2f}\")\n\n# Calculate the area of corn based on the corn mask.\ncorn_area_acres = np.sum(corn_mask) * pixel_area_acres\nprint(f\"Total acres of corn: {corn_area_acres:.2f}\")\n\n\n\n\nAcres impacted by flooding in corn fields: 57.60\nTotal acres of corn: 36616.42\n\n\nWhat can we tell from the changes in corn acreage and the amount below\n\nGraphically view the changes in NDVI.\n\n# Graph the differences\n\ncorn_above_water_mask = corn_mask & ~SLR_MASK # set the water mask (corn and not below water)\ncorn_below_water_mask = corn_mask & SLR_MASK # set the below water mask for corn\n\ncorn_above_water_mask = corn_above_water_mask[:,:]\ncorn_below_water_mask = corn_below_water_mask[:,:]\nmasked_ndvi_below_water = masked_ndvi[:, corn_below_water_mask] # find the NDVI for below water\nmasked_ndvi_above_water = masked_ndvi[:, corn_above_water_mask] # find the NDVI for above water\n\n\nndvi_analysis =  {\n    'corn_below_water': { # gather data for the corn that is to be below water\n        'mask': corn_below_water_mask,\n        'ndvi': masked_ndvi_below_water,\n        'mean': np.mean(masked_ndvi_below_water, axis=1) if masked_ndvi_below_water.size > 0 else None,\n        'min': np.min(masked_ndvi_below_water, axis=1) if masked_ndvi_below_water.size > 0 else None,\n        'max': np.max(masked_ndvi_below_water, axis=1) if masked_ndvi_below_water.size > 0 else None\n    },\n    'corn_above_water': {\n        'mask': corn_above_water_mask,\n        'ndvi': masked_ndvi_above_water,\n        'mean': np.mean(masked_ndvi_above_water, axis=1) if masked_ndvi_above_water.size > 0 else None,\n        'min': np.min(masked_ndvi_above_water, axis=1) if masked_ndvi_above_water.size > 0 else None,\n        'max': np.max(masked_ndvi_above_water, axis=1) if masked_ndvi_above_water.size > 0 else None\n    }\n}\n\n\n\nplt.figure(figsize=(12, 6))\n\nplt.subplot(1, 2, 1)\nplt.plot(day, ndvi_analysis['corn_above_water']['mean'], label='Corn Above Water', color='green')\nplt.plot(day, ndvi_analysis['corn_below_water']['mean'], label='Corn Below Water', color='blue')\nplt.title('Mean NDVI')\nplt.xlabel('Days')\nplt.xticks(rotation=90)\nplt.ylabel('NDVI')\nplt.legend()\n\n\nplt.subplot(1, 2, 2)\nplt.plot(day, ndvi_analysis['corn_above_water']['max'], label='Corn Above Water', color='green')\nplt.plot(day, ndvi_analysis['corn_below_water']['max'], label='Corn Below Water', color='blue')\nplt.title('Maximum NDVI')\nplt.xlabel('Days')\nplt.xticks(rotation=90)\nplt.ylabel('NDVI')\nplt.legend()\n\nplt.tight_layout()\nplt.show()\n\nfor condition in ['corn_below_water', 'corn_above_water']:\n    print(f\"\\n{condition.replace('_', ' ').title()} Corn Analysis per tile:\")\n    for stat in ['mean', 'max']:\n        print(f\"{stat.capitalize()} NDVI: {ndvi_analysis[condition][stat]}\")\n\n\n\n\n\nCorn Below Water Corn Analysis per tile:\nMean NDVI: [        nan         nan         nan         nan         nan         nan\n -0.02143939         nan         nan         nan         nan         nan\n  0.02174798         nan         nan]\nMax NDVI: [       nan        nan        nan        nan        nan        nan\n 0.00174968        nan        nan        nan        nan        nan\n 0.04795939        nan        nan]\n\nCorn Above Water Corn Analysis per tile:\nMean NDVI: [        nan         nan         nan         nan         nan         nan\n -0.0182513          nan         nan         nan         nan         nan\n  0.02514324         nan         nan]\nMax NDVI: [       nan        nan        nan        nan        nan        nan\n 0.00197202        nan        nan        nan        nan        nan\n 0.07461124        nan        nan]\n\n\nWe can see that it is currently in trouble because the NDVI values are already lower, but we also know the number of acres impacted. What are the estimations for the loss of land? Building on that, what other areas beyond these calculations might be impacted as the sea rises?\nWe can see that the corn predicted to be below water in 2050 is already showing signs of decreased NDVI values. As the sea level continues to rise and salinization impacts farmers, what are the future conditions for corn growing in Maryland? What are the estimated impacts? What can we do?\n\n# Final Analysis and Reflection Section\n\n# Cropland and Crop Type Mapping Insights\ncropland_impact = {\n    'total_corn_acres': corn_area_acres,\n    'projected_flooded_acres': impacted_acres,\n    'percent_at_risk': (impacted_acres / corn_area_acres) * 100\n}\n\n# Crop Area Estimation Insights\nndvi_trend_analysis = {\n    'below_water_ndvi_mean': np.mean(ndvi_analysis['corn_below_water']['mean']),\n    'above_water_ndvi_mean': np.mean(ndvi_analysis['corn_above_water']['mean']),\n    'productivity_difference': np.mean(ndvi_analysis['corn_above_water']['mean']) - np.mean(ndvi_analysis['corn_below_water']['mean'])\n}\n\n# Print Narrative Report\nprint(\"\\n--- NASA Acres Essential Agricultural Variables (EAV) Analysis ---\")\nprint(f\"Total Corn Acreage: {cropland_impact['total_corn_acres']:.2f} acres\")\nprint(f\"Projected Flood Impact: {cropland_impact['projected_flooded_acres']:.2f} acres\")\nprint(f\"Percentage of Corn Land at Risk: {cropland_impact['percent_at_risk']:.2f}%\")\nprint(f\"\\nNDVI Productivity Assessment:\")\nprint(f\"  Corn Above Water NDVI: {ndvi_trend_analysis['above_water_ndvi_mean']:.4f}\")\nprint(f\"  Corn Below Water NDVI: {ndvi_trend_analysis['below_water_ndvi_mean']:.4f}\")\nprint(f\"  Productivity Difference: {ndvi_trend_analysis['productivity_difference']:.4f}\")\n\n# Reflection on Broader Implications\nprint(\"\\nReflection:\")\nprint(\"This analysis demonstrates the critical importance of:\")\nprint(\"1. Continuous monitoring of agricultural lands\")\nprint(\"2. Understanding climate change impacts on crop productivity\")\nprint(\"3. Developing adaptive strategies for coastal agricultural communities\")\n\n\n--- NASA Acres Essential Agricultural Variables (EAV) Analysis ---\nTotal Corn Acreage: 36616.42 acres\nProjected Flood Impact: 57.60 acres\nPercentage of Corn Land at Risk: 0.16%\n\nNDVI Productivity Assessment:\n  Corn Above Water NDVI: nan\n  Corn Below Water NDVI: nan\n  Productivity Difference: nan\n\nReflection:\nThis analysis demonstrates the critical importance of:\n1. Continuous monitoring of agricultural lands\n2. Understanding climate change impacts on crop productivity\n3. Developing adaptive strategies for coastal agricultural communities"
  },
  {
    "objectID": "m401-nasa-acres-climate-resilience-network.html#knowledge-check",
    "href": "m401-nasa-acres-climate-resilience-network.html#knowledge-check",
    "title": "NASA Acres and Climate Resilience Network",
    "section": "Knowledge Check",
    "text": "Knowledge Check\nTest your knowledge from this module.\n\nWhat are the insights that we can derive from this module?\nWhat are the current impacts of land being close to the water?\nWhat is the potential loss of productive land?\nWhere could there be errors given the sampling methods?\n\nThis is where mapping and monitoring the changes in our farmland is crucial. We can identify, monitor, and track changes as they arise. We can apply this view to a historical view using earlier imagery or later imagery to track the newest updates, even applying models to highlight potential future views."
  },
  {
    "objectID": "m401-nasa-acres-climate-resilience-network.html#printing-and-sharing-results",
    "href": "m401-nasa-acres-climate-resilience-network.html#printing-and-sharing-results",
    "title": "NASA Acres and Climate Resilience Network",
    "section": "Printing and Sharing Results",
    "text": "Printing and Sharing Results\nIf you want to download the tifs you created, you can do so here.\n\nSLR_output_tif_path = '' # Replace with your desired path\nslr_masked_int = SLR_MASK.astype(rasterio.uint8)\n\n\nwith rasterio.open(\n    SLR_output_tif_path,\n    'w',\n    driver='GTiff',\n    height=slr_resampled_meta['height'],\n    width=slr_resampled_meta['width'],\n    count=1,  # Number of bands in the output GeoTIFF\n    dtype=rasterio.uint8,\n    crs=slr_resampled_meta['crs'],\n    transform=slr_resampled_meta['transform'],\n    nodata=0 # Set nodata value if necessary\n) as dst:\n    dst.write(slr_masked_int, 1)\n\nprint(f\"Masked SLR saved to: {SLR_output_tif_path}\")\n\n\ncorn_maskoutput_tif_path = '' # Replace with your desired path\ncorn_mask_int = corn_mask.astype(rasterio.uint8)\n\n\nwith rasterio.open(\n    corn_maskoutput_tif_path,\n    'w',\n    driver='GTiff',\n    height=cdl_resampled_meta['height'],\n    width=cdl_resampled_meta['width'],\n    count=1,  # Number of bands in the output GeoTIFF\n    dtype=rasterio.uint8,\n    crs=cdl_resampled_meta['crs'],\n    transform=cdl_resampled_meta['transform'],\n    nodata=0 # Set nodata value if necessary\n) as dst:\n    dst.write(corn_mask_int, 1)\n\nprint(f\"Masked SLR saved to: {corn_maskoutput_tif_path}\")"
  }
]